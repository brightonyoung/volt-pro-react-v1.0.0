{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/plugins/SweetAlert.js\";\nimport React from 'react';\nimport { Row, Col, Card, Button, Container } from '@themesberg/react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport Documentation from \"../../components/Documentation\";\nexport default (() => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"px-0\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h2\",\n              id: \"sweet-alert\",\n              children: \"SweetAlert2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fs-5 fw-light\",\n              children: \"Use this premium notifications plugin to show modal prompts to your users.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n              title: \"Example\",\n              description: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Here\\u2019s a basic example of an informational modal that is being prompted when the following button is clicked:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this),\n              imports: `import { Button } from '@themesberg/react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';`,\n              scope: {\n                Button,\n                Swal,\n                withReactContent\n              },\n              example: `const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n                \nconst onClick = async function() {\n  await SwalWithBootstrapButtons.fire(\n    'Basic alert',\n    'You clicked the button!'\n  );\n}\n\nrender(\n  <Button variant=\"primary\" onClick={onClick}>\n    Basic alert\n  </Button>\n);`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n              title: \"Alert type\",\n              description: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"There are 5 built-in icons for the modal of SweetAlert2 and each will show a corresponding icon animation: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 128\n                  }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 150\n                  }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 170\n                  }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 192\n                  }, this), \", and \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 215\n                  }, this), \". It can either be put in the array under the key \\u201Cicon\\u201D or passed as the third parameter of the function.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Here\\u2019s an example when the icon type of the alert is \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 75\n                  }, this), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true),\n              imports: `import { Button } from '@themesberg/react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';`,\n              scope: {\n                Button,\n                Swal,\n                withReactContent\n              },\n              example: `const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n                \nconst onClick = async function() {\n  await SwalWithBootstrapButtons.fire({\n    icon: 'error',\n    title: 'Oops...',\n    text: 'Something went wrong!',\n    footer: '<a href=\"#do-something\">Why do I have this issue?</a>'\n  });\n}\n\nrender(\n  <Button variant=\"danger\" onClick={onClick}>\n    Error alert\n  </Button>\n);`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/plugins/SweetAlert.js"],"names":["React","Row","Col","Card","Button","Container","Swal","withReactContent","Documentation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,6BAAlD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,gBAAe,MAAM;AACnB,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,2BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,SAAS,EAAC,KAAvB;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,IAAd;AAAmB,cAAA,EAAE,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME,QAAC,aAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAKE,cAAA,OAAO,EAAG;AAC1B;AACA,0DAPc;AAQE,cAAA,KAAK,EAAE;AAAEJ,gBAAAA,MAAF;AAAUE,gBAAAA,IAAV;AAAgBC,gBAAAA;AAAhB,eART;AASE,cAAA,OAAO,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5Bc;AAAA;AAAA;AAAA;AAAA,oBANF,eAqCE,QAAC,aAAD;AACE,cAAA,KAAK,EAAC,YADR;AAEE,cAAA,WAAW,eAAE;AAAA,wCACX;AAAA,yJAC6G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD7G,qBACmI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADnI,qBACuJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADvJ,qBAC6K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD7K,yBACoM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADpM;AAAA;AAAA;AAAA;AAAA;AAAA,wBADW,eAIX;AAAA,wGAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJW;AAAA,8BAFf;AAQE,cAAA,OAAO,EAAG;AAC1B;AACA,0DAVc;AAWE,cAAA,KAAK,EAAE;AAAEH,gBAAAA,MAAF;AAAUE,gBAAAA,IAAV;AAAgBC,gBAAAA;AAAhB,eAXT;AAYE,cAAA,OAAO,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCc;AAAA;AAAA;AAAA;AAAA,oBArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoFD,CArFD","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button, Container } from '@themesberg/react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nimport Documentation from \"../../components/Documentation\";\n\nexport default () => {\n  return (\n    <Container className=\"px-0\">\n      <Row>\n        <Col xs={12} className=\"p-3\">\n          <Card>\n            <Card.Body>\n              <h1 className=\"h2\" id=\"sweet-alert\">SweetAlert2</h1>\n              <p className=\"fs-5 fw-light\">\n                Use this premium notifications plugin to show modal prompts to your users.\n              </p>\n\n              <Documentation\n                title=\"Example\"\n                description={\n                  <p>Here’s a basic example of an informational modal that is being prompted when the following button is clicked:</p>\n                }\n                imports={`import { Button } from '@themesberg/react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';`}\n                scope={{ Button, Swal, withReactContent }}\n                example={`const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n                \nconst onClick = async function() {\n  await SwalWithBootstrapButtons.fire(\n    'Basic alert',\n    'You clicked the button!'\n  );\n}\n\nrender(\n  <Button variant=\"primary\" onClick={onClick}>\n    Basic alert\n  </Button>\n);`}\n              />\n\n              <Documentation\n                title=\"Alert type\"\n                description={<>\n                  <p>\n                    There are 5 built-in icons for the modal of SweetAlert2 and each will show a corresponding icon animation: <code>warning</code>, <code>error</code>, <code>success</code>, <code>info</code>, and <code>question</code>. It can either be put in the array under the key “icon” or passed as the third parameter of the function.\n                  </p>\n                  <p>Here’s an example when the icon type of the alert is <code>error</code>:</p>\n                </>}\n                imports={`import { Button } from '@themesberg/react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';`}\n                scope={{ Button, Swal, withReactContent }}\n                example={`const SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n                \nconst onClick = async function() {\n  await SwalWithBootstrapButtons.fire({\n    icon: 'error',\n    title: 'Oops...',\n    text: 'Something went wrong!',\n    footer: '<a href=\"#do-something\">Why do I have this issue?</a>'\n  });\n}\n\nrender(\n  <Button variant=\"danger\" onClick={onClick}>\n    Error alert\n  </Button>\n);`}\n              />\n\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}