{"ast":null,"code":"import _objectSpread from\"/workspace/volt-pro-react-v1.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import moment from\"moment-timezone\";import Datetime from\"react-datetime\";import Nouislider from\"nouislider-react\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearch,faCalendarAlt}from'@fortawesome/free-solid-svg-icons';import{Col,Row,Card,Form,Container,InputGroup}from'@themesberg/react-bootstrap';import Select from'react-select';import Documentation from\"../../components/Documentation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default(function(){var selectOptions=[{value:'bootstrap',label:'Bootstrap'},{value:'react',label:'React'},{value:'vue',label:'Vue'},{value:'angular',label:'Angular'},{value:'svelte',label:'Svelte'},{value:'laravel',label:'Laravel'},{value:'node',label:'Node'},{value:'dotnet',label:'.NET'}];var customStyles={control:function control(provided){return _objectSpread(_objectSpread({},provided),{},{borderRadius:'.5rem'});},multiValue:function multiValue(provided){return _objectSpread(_objectSpread({},provided),{},{borderRadius:'.5rem'});},multiValueRemove:function multiValueRemove(provided){return _objectSpread(_objectSpread({},provided),{},{borderRadius:'.5rem'});},placeholder:function placeholder(provided){return _objectSpread(_objectSpread({},provided),{},{borderRadius:'.5rem'});},singleValue:function singleValue(provided,state){var opacity=state.isDisabled?0.5:1;var transition='opacity 300ms';return _objectSpread(_objectSpread({},provided),{},{opacity:opacity,transition:transition});}};return/*#__PURE__*/_jsx(\"article\",{children:/*#__PURE__*/_jsxs(Container,{className:\"px-0\",children:[/*#__PURE__*/_jsx(Row,{className:\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",children:/*#__PURE__*/_jsxs(Col,{className:\"d-block mb-4 mb-md-0\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h2\",children:\"Forms\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\"})]})}),/*#__PURE__*/_jsx(Documentation,{title:\"Example\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Form elements are an important part of the UI to receive text input from the users. The \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form>\"}),\" component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:\"]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"name@example.com\\\" />\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Example textarea</Form.Label>\\n    <Form.Control as=\\\"textarea\\\" rows=\\\"3\\\" />\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Input fields with icon\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You can also add icons to the left or right side of the input field by using the \",/*#__PURE__*/_jsx(\"code\",{children:\"<InputGroup>\"}),\" component and using the \",/*#__PURE__*/_jsx(\"code\",{children:\"<InputGroup.Text>\"}),\" element with an icon element inside it, either after or before the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Control>\"}),\" element.\"]}),scope:{Form:Form,InputGroup:InputGroup,FontAwesomeIcon:FontAwesomeIcon,faSearch:faSearch},imports:\"import { Form, InputGroup } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faSearch } from \\\"@fortawesome/free-solid-svg-icons\\\";\",example:\"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Icon Left</Form.Label>\\n    <InputGroup>\\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\\n      <Form.Control type=\\\"text\\\" placeholder=\\\"Search\\\" />\\n    </InputGroup>\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Icon Right</Form.Label>\\n    <InputGroup>\\n      <Form.Control type=\\\"text\\\" placeholder=\\\"Search\\\" />\\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\\n    </InputGroup>\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Validation\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You can easily update the styles of a valid or invalid styles input field by using the \",/*#__PURE__*/_jsx(\"code\",{children:\"isValid\"}),\" or \",/*#__PURE__*/_jsx(\"code\",{children:\"isInvalid\"}),\" attributes. Additionally, you can use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Control.Feedback>\"}),\" component to write the message regarding the success or error message.\"]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Username</Form.Label>\\n    <Form.Control required isInvalid type=\\\"text\\\" />\\n    <Form.Control.Feedback type=\\\"invalid\\\">Please choose a username.</Form.Control.Feedback>\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>First name</Form.Label>\\n    <Form.Control required isValid type=\\\"text\\\" defaultValue=\\\"Mark\\\" />\\n    <Form.Control.Feedback type=\\\"valid\\\">Looks good!</Form.Control.Feedback>\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Select input\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Select>\"}),\" component can be used for option selection from the user. You can use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<option>\"}),\" elements to add multiple options and use the \",/*#__PURE__*/_jsx(\"code\",{children:\"defaultValue\"}),\" attribute to set the default value of the select field.\"]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Example select</Form.Label>\\n    <Form.Select>\\n      <option defaultValue>Open this select menu</option>\\n      <option>One</option>\\n      <option>Two</option>\\n      <option>Three</option>\\n    </Form.Select>\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Multiple select\",description:\"\",scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Group className=\\\"mb-3\\\">\\n    <Form.Label>Example multiple select</Form.Label>\\n    <Form.Select multiple>\\n      <option defaultValue>Open this select menu</option>\\n      <option>One</option>\\n      <option>Two</option>\\n      <option>Three</option>\\n    </Form.Select>\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Textarea\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You can create a textarea input field by adding the \",/*#__PURE__*/_jsx(\"code\",{children:\"as=\\\"textarea\\\"\"}),\" modifier attribute to the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Control>\"}),\" component.\"]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Group>\\n    <Form.Label>Example textarea</Form.Label>\\n    <Form.Control as=\\\"textarea\\\" rows=\\\"4\\\" placeholder=\\\"Enter your message...\\\" />\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"File upload\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"If you want to use an input field to upload files, you need to add the \",/*#__PURE__*/_jsx(\"code\",{children:\"type=\\\"file\\\"\"}),\" attribute to the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Control>\"}),\" component.\"]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Control type=\\\"file\\\" />\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Checkboxes\",description:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Check>\"}),\" component to create checkbox items. If you want to disable on them, you need to add the \",/*#__PURE__*/_jsx(\"code\",{children:\"disabled\"}),\" attribute.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Make sure the is a \",/*#__PURE__*/_jsx(\"code\",{children:'id=\"*\"'}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:'htmlFor=\"*\"'}),\" attribute for each element so that clicking on the text will also toggle the element.\"]})]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Check label=\\\"Default checkbox\\\" id=\\\"checkbox1\\\" htmlFor=\\\"checkbox1\\\" />\\n  <Form.Check disabled label=\\\"Disabled checkbox\\\" id=\\\"checkbox2\\\" htmlFor=\\\"checkbox2\\\" />\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Radio buttons\",description:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"If you want to use radio buttons, you need to use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Check>\"}),\" component with the \",/*#__PURE__*/_jsx(\"code\",{children:\"type=\\\"radio\\\"\"}),\" modifier. You can disable the element by using the \",/*#__PURE__*/_jsx(\"code\",{children:\"disabled\"}),\" attribute.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Make sure the is a \",/*#__PURE__*/_jsx(\"code\",{children:'id=\"*\"'}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:'htmlFor=\"*\"'}),\" attribute for each element so that clicking on the text will also toggle the element.\"]})]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <fieldset>\\n    <Form.Check\\n      defaultChecked\\n      type=\\\"radio\\\"\\n      defaultValue=\\\"option1\\\"\\n      label=\\\"Default radio\\\"\\n      name=\\\"exampleRadios\\\"\\n      id=\\\"radio1\\\"\\n      htmlFor=\\\"radio1\\\"\\n      />\\n\\n    <Form.Check\\n      type=\\\"radio\\\"\\n      defaultValue=\\\"option2\\\"\\n      label=\\\"Second default radio\\\"\\n      name=\\\"exampleRadios\\\"\\n      id=\\\"radio2\\\"\\n      htmlFor=\\\"radio2\\\"\\n      />\\n\\n    <Form.Check\\n      disabled\\n      type=\\\"radio\\\"\\n      defaultValue=\\\"option3\\\"\\n      label=\\\"Disabled radio\\\"\\n      name=\\\"exampleRadios\\\"\\n      id=\\\"radio3\\\"\\n      htmlFor=\\\"radio3\\\"\\n      />\\n  </fieldset>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Switches\",description:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"If you want to use the switch component, you need to use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Form.Check>\"}),\" component with the \",/*#__PURE__*/_jsx(\"code\",{children:\"type=\\\"switch\\\"\"}),\" modifier. If you want to have it checked by default, just add the \",/*#__PURE__*/_jsx(\"code\",{children:\"defaultChecked\"}),\" attribute.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Make sure the is a \",/*#__PURE__*/_jsx(\"code\",{children:'id=\"*\"'}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:'htmlFor=\"*\"'}),\" attribute for each element so that clicking on the text will also toggle the element.\"]})]}),scope:{Form:Form},imports:\"import { Form } from '@themesberg/react-bootstrap';\",example:\"<Form>\\n  <Form.Check\\n    type=\\\"switch\\\"\\n    label=\\\"Default switch\\\"\\n    id=\\\"switch1\\\"\\n    htmlFor=\\\"switch1\\\"\\n    />\\n\\n  <Form.Check defaultChecked\\n    type=\\\"switch\\\"\\n    label=\\\"Checked switch\\\"\\n    id=\\\"switch2\\\"\\n    htmlFor=\\\"switch2\\\"\\n    />\\n\\n  <Form.Check disabled\\n    type=\\\"switch\\\"\\n    label=\\\"Disabled switch\\\"\\n    id=\\\"switch3\\\"\\n    htmlFor=\\\"switch3\\\"\\n    />\\n\\n  <Form.Check disabled defaultChecked\\n    type=\\\"switch\\\"\\n    label=\\\"Disabled checked switch\\\"\\n    id=\\\"switch4\\\"\\n    htmlFor=\\\"switch4\\\"\\n    />\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Datepicker\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Datetime>\"}),\" component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the \",/*#__PURE__*/_jsx(Card.Link,{href:\"https://www.npmjs.com/package/react-datetime\",target:\"_blank\",children:\"react-datetime\"}),\" documentation.\"]}),scope:{Datetime:Datetime,Form:Form,InputGroup:InputGroup,FontAwesomeIcon:FontAwesomeIcon,faCalendarAlt:faCalendarAlt,moment:moment},imports:\"import React, { useState } from \\\"react\\\";\\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\\nimport Datetime from \\\"react-datetime\\\";\\nimport moment from \\\"moment-timezone\\\";\\n\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faCalendarAlt } from \\\"@fortawesome/free-solid-svg-icons\\\";\",example:\"const Datepicker = () => {\\n  const [birthday, setBirthday] = React.useState(\\\"\\\");\\n\\n  return(\\n    <Form>\\n      <Form.Group className=\\\"mb-3\\\">\\n        <Datetime\\n          timeFormat={false}\\n          closeOnSelect={false}\\n          onChange={setBirthday}\\n          renderInput={(props, openCalendar) => (\\n            <InputGroup>\\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\\n              <Form.Control\\n                required\\n                type=\\\"text\\\"\\n                value={birthday ? moment(birthday).format(\\\"MM/DD/YYYY\\\") : \\\"\\\"}\\n                placeholder=\\\"mm/dd/yyyy\\\"\\n                onFocus={openCalendar}\\n                onChange={() => { }} />\\n            </InputGroup>\\n          )} />\\n      </Form.Group>\\n    </Form>\\n  );\\n}\\n\\nrender( <Datepicker /> )\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Searchable select\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Using the advanced \",/*#__PURE__*/_jsx(\"code\",{children:\"<Select>\"}),\" component you can create an input field where you can select items, but also search for them. The \",/*#__PURE__*/_jsx(\"code\",{children:\"selectOptions\"}),\" constant should be an object of key and value pairs that will be added to the \",/*#__PURE__*/_jsx(\"code\",{children:\"options\"}),\" attribute of the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Select>\"}),\" component.\"]}),scope:{Select:Select,Form:Form,selectOptions:selectOptions,customStyles:customStyles},imports:\"import Select from \\\"react-select\\\";\\nimport { Form } from '@themesberg/react-bootstrap';\\n\\nconst selectOptions = [\\n  { value: 'bootstrap', label: 'Bootstrap' },\\n  { value: 'react', label: 'React' },\\n  { value: 'vue', label: 'Vue' },\\n  { value: 'angular', label: 'Angular' },\\n  { value: 'svelte', label: 'Svelte' },\\n];\\n\\nconst customStyles = {\\n\\n  control: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  multiValue: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  multiValueRemove: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  placeholder: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  singleValue: (provided, state) => {\\n    const opacity = state.isDisabled ? 0.5 : 1;\\n    const transition = 'opacity 300ms';\\n\\n    return {\\n      ...provided,\\n      opacity,\\n      transition,\\n    };\\n  }\\n};\",example:\"<Form>\\n  <Form.Group className=\\\"mb-2\\\">\\n    <Form.Label>Select state</Form.Label>\\n    <Select options={selectOptions} styles={customStyles} theme={theme => ({\\n      ...theme,\\n      borderRadius: 0,\\n      colors: {\\n        ...theme.colors,\\n        primary25: '#61DAFB',\\n        primary: '#61DAFB',\\n      }\\n    })} />\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Multiple searchable select\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Using tags and multiple options for the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Select>\"}),\" component is as easy as adding a \",/*#__PURE__*/_jsx(\"code\",{children:\"isMulti\"}),\" attribute to the component.\"]}),scope:{Select:Select,Form:Form,selectOptions:selectOptions,customStyles:customStyles},imports:\"import Select from \\\"react-select\\\";\\nimport { Form } from '@themesberg/react-bootstrap';\\n\\nconst selectOptions = [\\n  { value: 'bootstrap', label: 'Bootstrap' },\\n  { value: 'react', label: 'React' },\\n  { value: 'vue', label: 'Vue' },\\n  { value: 'angular', label: 'Angular' },\\n  { value: 'svelte', label: 'Svelte' },\\n];\\n\\nconst customStyles = {\\n\\n  control: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  multiValue: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  multiValueRemove: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem'\\n  }),\\n\\n  placeholder: (provided) => ({\\n    ...provided,\\n    borderRadius: '.5rem',\\n  }),\\n\\n  singleValue: (provided, state) => {\\n    const opacity = state.isDisabled ? 0.5 : 1;\\n    const transition = 'opacity 300ms';\\n\\n    return {\\n      ...provided,\\n      opacity,\\n      transition,\\n    };\\n  }\\n};\",example:\"<Form>\\n  <Form.Group className=\\\"mb-2\\\">\\n    <Form.Label>Select state</Form.Label>\\n    <Select options={selectOptions} theme={theme => ({\\n      ...theme,\\n      borderRadius: 0,\\n      colors: {\\n        ...theme.colors,\\n        primary25: '#61DAFB',\\n        primary: '#61DAFB',\\n      }\\n    })} styles={customStyles} isMulti />\\n  </Form.Group>\\n</Form>\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"There are many options that you can use with the \",/*#__PURE__*/_jsx(\"code\",{children:\"react-select\"}),\" library. Read more about the possibilities by browsing the \",/*#__PURE__*/_jsx(Card.Link,{href:\"https://react-select.com/home\",target:\"_blank\",children:\"official documentation.\"})]}),/*#__PURE__*/_jsx(Documentation,{title:\"Range slider\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You can use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Nouislider>\"}),\" component to create a range slider component and retreive count information from your users. You can set the start position of the slider position using the \",/*#__PURE__*/_jsx(\"code\",{children:\"start\"}),\" attribute and set the minimum and maximum range using the \",/*#__PURE__*/_jsx(\"code\",{children:\"range\"}),\" attribute.\"]}),scope:{Form:Form,Nouislider:Nouislider},imports:\"import { Form } from '@themesberg/react-bootstrap';\\nimport Nouislider from \\\"nouislider-react\\\";\",example:\"<Form>\\n  <Nouislider\\n    connect=\\\"lower\\\"\\n    className=\\\"input-slider\\\"\\n    start={200}\\n    range={{ min: 100, max: 500 }}\\n  />\\n</Form>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Range slider count\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"In this example we show you how to use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Nouislider>\"}),\" component to also show the value of the position of the slider using tooltips.\"]}),scope:{Form:Form,Nouislider:Nouislider},imports:\"import { Form } from '@themesberg/react-bootstrap';\\nimport Nouislider from \\\"nouislider-react\\\";\",example:\"<Form>\\n  <Nouislider\\n    tooltips={true}\\n    connect={true}\\n    className=\\\"input-slider\\\"\\n    start={[200, 400]}\\n    range={{ min: 100, max: 500 }}\\n  />\\n</Form>\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"If you want read more about what options you can use with the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Nouislider>\"}),\" component, you can check out the \",/*#__PURE__*/_jsx(Card.Link,{href:\"https://github.com/mmarkelov/react-nouislider\",target:\"_blank\",children:\"official documentation.\"})]})]})});});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/components/Forms.js"],"names":["React","moment","Datetime","Nouislider","FontAwesomeIcon","faSearch","faCalendarAlt","Col","Row","Card","Form","Container","InputGroup","Select","Documentation","selectOptions","value","label","customStyles","control","provided","borderRadius","multiValue","multiValueRemove","placeholder","singleValue","state","opacity","isDisabled","transition"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport Nouislider from \"nouislider-react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Card, Form, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport Select from 'react-select';\n\nimport Documentation from \"../../components/Documentation\";\n\nexport default () => {\n  const selectOptions = [\n    { value: 'bootstrap', label: 'Bootstrap' },\n    { value: 'react', label: 'React' },\n    { value: 'vue', label: 'Vue' },\n    { value: 'angular', label: 'Angular' },\n    { value: 'svelte', label: 'Svelte' },\n    { value: 'laravel', label: 'Laravel' },\n    { value: 'node', label: 'Node' },\n    { value: 'dotnet', label: '.NET' },\n  ];\n\n  const customStyles = {\n\n    control: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem',\n    }),\n\n    multiValue: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem'\n    }),\n\n    multiValueRemove: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem'\n    }),\n\n    placeholder: (provided) => ({\n      ...provided,\n      borderRadius: '.5rem',\n    }),\n\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n\n      return {\n        ...provided,\n        opacity,\n        transition,\n      };\n    }\n  };\n\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Forms</h1>\n            <p className=\"mb-0\">\n              Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>Form elements are an important part of the UI to receive text input from the users. The <code>&#x3C;Form&#x3E;</code> component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Input fields with icon\"\n          description={\n            <p>You can also add icons to the left or right side of the input field by using the <code>&#x3C;InputGroup&#x3E;</code> component and using the <code>&#x3C;InputGroup.Text&#x3E;</code> element with an icon element inside it, either after or before the <code>&#x3C;Form.Control&#x3E;</code> element.</p>\n          }\n          scope={{ Form, InputGroup, FontAwesomeIcon, faSearch }}\n          imports={`import { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Left</Form.Label>\n    <InputGroup>\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n    </InputGroup>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Right</Form.Label>\n    <InputGroup>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n    </InputGroup>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Validation\"\n          description={\n            <p>You can easily update the styles of a valid or invalid styles input field by using the <code>isValid</code> or <code>isInvalid</code> attributes. Additionally, you can use the <code>&#x3C;Form.Control.Feedback&#x3E;</code> component to write the message regarding the success or error message.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control required isInvalid type=\"text\" />\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>First name</Form.Label>\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Select input\"\n          description={\n            <p>The <code>&#x3C;Form.Select&#x3E;</code> component can be used for option selection from the user. You can use the <code>&#x3C;option&#x3E;</code> elements to add multiple options and use the <code>defaultValue</code> attribute to set the default value of the select field.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Select>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Multiple select\"\n          description=\"\"\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Select multiple>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Textarea\"\n          description={\n            <p>You can create a textarea input field by adding the <code>as=\"textarea\"</code> modifier attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group>\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"File upload\"\n          description={\n            <p>If you want to use an input field to upload files, you need to add the <code>type=\"file\"</code> attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Control type=\"file\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Checkboxes\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Form.Check&#x3E;</code> component to create checkbox items. If you want to disable on them, you need to add the <code>disabled</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Radio buttons\"\n          description={\n            <>\n              <p>If you want to use radio buttons, you need to use the <code>&#x3C;Form.Check&#x3E;</code> component with the <code>type=\"radio\"</code> modifier. You can disable the element by using the <code>disabled</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <fieldset>\n    <Form.Check\n      defaultChecked\n      type=\"radio\"\n      defaultValue=\"option1\"\n      label=\"Default radio\"\n      name=\"exampleRadios\"\n      id=\"radio1\"\n      htmlFor=\"radio1\"\n      />\n\n    <Form.Check\n      type=\"radio\"\n      defaultValue=\"option2\"\n      label=\"Second default radio\"\n      name=\"exampleRadios\"\n      id=\"radio2\"\n      htmlFor=\"radio2\"\n      />\n\n    <Form.Check\n      disabled\n      type=\"radio\"\n      defaultValue=\"option3\"\n      label=\"Disabled radio\"\n      name=\"exampleRadios\"\n      id=\"radio3\"\n      htmlFor=\"radio3\"\n      />\n  </fieldset>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Switches\"\n          description={\n            <>\n              <p>If you want to use the switch component, you need to use the <code>&#x3C;Form.Check&#x3E;</code> component with the <code>type=\"switch\"</code> modifier. If you want to have it checked by default, just add the <code>defaultChecked</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Check\n    type=\"switch\"\n    label=\"Default switch\"\n    id=\"switch1\"\n    htmlFor=\"switch1\"\n    />\n\n  <Form.Check defaultChecked\n    type=\"switch\"\n    label=\"Checked switch\"\n    id=\"switch2\"\n    htmlFor=\"switch2\"\n    />\n\n  <Form.Check disabled\n    type=\"switch\"\n    label=\"Disabled switch\"\n    id=\"switch3\"\n    htmlFor=\"switch3\"\n    />\n\n  <Form.Check disabled defaultChecked\n    type=\"switch\"\n    label=\"Disabled checked switch\"\n    id=\"switch4\"\n    htmlFor=\"switch4\"\n    />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Datepicker\"\n          description={\n            <p>Use the <code>&#x3C;Datetime&#x3E;</code> component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the <Card.Link href=\"https://www.npmjs.com/package/react-datetime\" target=\"_blank\">react-datetime</Card.Link> documentation.</p>\n          }\n          scope={{ Datetime, Form, InputGroup, FontAwesomeIcon, faCalendarAlt, moment }}\n          imports={`import React, { useState } from \"react\";\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`const Datepicker = () => {\n  const [birthday, setBirthday] = React.useState(\"\");\n\n  return(\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <Datetime\n          timeFormat={false}\n          closeOnSelect={false}\n          onChange={setBirthday}\n          renderInput={(props, openCalendar) => (\n            <InputGroup>\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\n              <Form.Control\n                required\n                type=\"text\"\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n                placeholder=\"mm/dd/yyyy\"\n                onFocus={openCalendar}\n                onChange={() => { }} />\n            </InputGroup>\n          )} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nrender( <Datepicker /> )`}\n        />\n\n        <Documentation\n          title=\"Searchable select\"\n          description={\n            <p>Using the advanced <code>&#x3C;Select&#x3E;</code> component you can create an input field where you can select items, but also search for them. The <code>selectOptions</code> constant should be an object of key and value pairs that will be added to the <code>options</code> attribute of the <code>&#x3C;Select&#x3E;</code> component.</p>\n          }\n          scope={{ Select, Form, selectOptions, customStyles }}\n          imports={`import Select from \"react-select\";\nimport { Form } from '@themesberg/react-bootstrap';\n\nconst selectOptions = [\n  { value: 'bootstrap', label: 'Bootstrap' },\n  { value: 'react', label: 'React' },\n  { value: 'vue', label: 'Vue' },\n  { value: 'angular', label: 'Angular' },\n  { value: 'svelte', label: 'Svelte' },\n];\n\nconst customStyles = {\n\n  control: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  multiValue: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  multiValueRemove: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  placeholder: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n    };\n  }\n};`}\n          example={`<Form>\n  <Form.Group className=\"mb-2\">\n    <Form.Label>Select state</Form.Label>\n    <Select options={selectOptions} styles={customStyles} theme={theme => ({\n      ...theme,\n      borderRadius: 0,\n      colors: {\n        ...theme.colors,\n        primary25: '#61DAFB',\n        primary: '#61DAFB',\n      }\n    })} />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Multiple searchable select\"\n          description={\n            <p>Using tags and multiple options for the <code>&#x3C;Select&#x3E;</code> component is as easy as adding a <code>isMulti</code> attribute to the component.</p>\n          }\n          scope={{ Select, Form, selectOptions, customStyles }}\n          imports={`import Select from \"react-select\";\nimport { Form } from '@themesberg/react-bootstrap';\n\nconst selectOptions = [\n  { value: 'bootstrap', label: 'Bootstrap' },\n  { value: 'react', label: 'React' },\n  { value: 'vue', label: 'Vue' },\n  { value: 'angular', label: 'Angular' },\n  { value: 'svelte', label: 'Svelte' },\n];\n\nconst customStyles = {\n\n  control: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  multiValue: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  multiValueRemove: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem'\n  }),\n\n  placeholder: (provided) => ({\n    ...provided,\n    borderRadius: '.5rem',\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n    };\n  }\n};`}\n          example={`<Form>\n  <Form.Group className=\"mb-2\">\n    <Form.Label>Select state</Form.Label>\n    <Select options={selectOptions} theme={theme => ({\n      ...theme,\n      borderRadius: 0,\n      colors: {\n        ...theme.colors,\n        primary25: '#61DAFB',\n        primary: '#61DAFB',\n      }\n    })} styles={customStyles} isMulti />\n  </Form.Group>\n</Form>`}\n        />\n\n        <p>There are many options that you can use with the <code>react-select</code> library. Read more about the possibilities by browsing the <Card.Link href=\"https://react-select.com/home\" target=\"_blank\">official documentation.</Card.Link></p>\n\n        <Documentation\n          title=\"Range slider\"\n          description={\n            <p>You can use the <code>&#x3C;Nouislider&#x3E;</code> component to create a range slider component and retreive count information from your users. You can set the start position of the slider position using the <code>start</code> attribute and set the minimum and maximum range using the <code>range</code> attribute.</p>\n          }\n          scope={{ Form, Nouislider }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';\nimport Nouislider from \"nouislider-react\";`}\n          example={`<Form>\n  <Nouislider\n    connect=\"lower\"\n    className=\"input-slider\"\n    start={200}\n    range={{ min: 100, max: 500 }}\n  />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Range slider count\"\n          description={\n            <p>In this example we show you how to use the <code>&#x3C;Nouislider&#x3E;</code> component to also show the value of the position of the slider using tooltips.</p>\n          }\n          scope={{ Form, Nouislider }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';\nimport Nouislider from \"nouislider-react\";`}\n          example={`<Form>\n  <Nouislider\n    tooltips={true}\n    connect={true}\n    className=\"input-slider\"\n    start={[200, 400]}\n    range={{ min: 100, max: 500 }}\n  />\n</Form>`}\n        />\n        <p>If you want read more about what options you can use with the <code>&#x3C;Nouislider&#x3E;</code> component, you can check out the <Card.Link href=\"https://github.com/mmarkelov/react-nouislider\" target=\"_blank\">official documentation.</Card.Link></p>\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}