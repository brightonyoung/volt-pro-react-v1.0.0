{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArchive, faCheckCircle, faChevronLeft, faChevronRight, faPlus, faSearch, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Form, Button, Tooltip, InputGroup, ButtonGroup, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport { TaskCardWidget } from \"../components/Widgets\";\nimport { Routes } from \"../routes\";\nimport TASKS_DATA from \"../data/tasks\";\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\nexport default _s(() => {\n  _s();\n\n  const [tasks, setTasks] = useState(TASKS_DATA);\n  const selectedTasksIds = tasks.filter(m => m.isSelected).map(m => m.id);\n  const disableMenu = selectedTasksIds.length === 0;\n\n  const toggleDoneStatus = id => {\n    setTasks(tasks.map(t => t.id === id ? { ...t,\n      statusKey: t.statusKey === \"done\" ? \"inProgress\" : \"done\"\n    } : t));\n  };\n\n  const selectTask = id => {\n    const newTasks = tasks.map(t => {\n      const isSelected = t.id === id ? !t.isSelected : t.isSelected;\n      return { ...t,\n        isSelected\n      };\n    });\n    setTasks(newTasks);\n  };\n\n  const markSelectedTasksAsDone = async () => {\n    const newTasks = tasks.map(t => selectedTasksIds.includes(t.id) ? { ...t,\n      \"statusKey\": \"done\"\n    } : t);\n    setTasks(newTasks);\n    await SwalWithBootstrapButtons.fire(\"Successfully marked as done.\", \"\", 'success');\n  };\n\n  const deleteTasks = async ids => {\n    const tasksNr = ids.length;\n    const textMessage = tasksNr === 1 ? \"Are you sure do you want to delete this task?\" : `Are you sure do you want to delete this ${tasksNr} tasks?`;\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newTasks = tasks.filter(t => !ids.includes(t.id));\n      const confirmMessage = tasksNr === 1 ? \"The task was deleted.\" : \"The tasks were deleted.\";\n      setTasks(newTasks);\n      await SwalWithBootstrapButtons.fire('Deleted', confirmMessage, 'success');\n    }\n  };\n\n  const archiveSelectedTasks = async () => {\n    const tasksNr = selectedTasksIds.length;\n    const textMessage = tasksNr === 1 ? \"Are you sure do you want to archive this task?\" : `Are you sure do you want to archive this ${tasksNr} tasks?`;\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"question\",\n      iconHtml: `<i class=\"fas fa-archive\"></i>`,\n      title: \"Confirm archivation\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newTasks = tasks.filter(f => !selectedTasksIds.includes(f.id));\n      const confirmMessage = tasksNr === 1 ? \"The task has been archived.\" : \"The tasks were archived.\";\n      setTasks(newTasks);\n      await SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        className: \"d-flex justify-content-between ps-0 mb-4 mb-lg-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-lg-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            to: Routes.SingleMessage.path,\n            variant: \"secondary\",\n            className: \"text-dark me-2\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus,\n              className: \"me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"New Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: ['hover', 'focus'],\n            placement: \"bottom\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Archive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: disableMenu,\n              onClick: archiveSelectedTasks,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faArchive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: ['hover', 'focus'],\n            placement: \"bottom\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Mark as done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: disableMenu,\n              onClick: markSelectedTasksAsDone,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheckCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: ['hover', 'focus'],\n            placement: \"bottom\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: disableMenu,\n              onClick: () => deleteTasks(selectedTasksIds),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        lg: 6,\n        className: \"px-0 mb-0\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search Tasks Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-wrapper border bg-white border-light shadow-sm py-1 rounded\",\n      children: [tasks.map(t => /*#__PURE__*/_createElement(TaskCardWidget, { ...t,\n        key: `task-${t.id}`,\n        selectTask: selectTask,\n        toggleDoneStatus: toggleDoneStatus,\n        deleteTask: id => deleteTasks([id]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex align-items-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 7,\n          className: \"mt-1\",\n          children: [\"Showing 1 - \", tasks.length, \" of 289\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            className: \"float-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faChevronLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faChevronRight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"lUFXVPMA0FivTVMGUkOOwe34pCk=\");","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/Tasks.js"],"names":["React","useState","Swal","withReactContent","Link","FontAwesomeIcon","faArchive","faCheckCircle","faChevronLeft","faChevronRight","faPlus","faSearch","faTrashAlt","Col","Row","Form","Button","Tooltip","InputGroup","ButtonGroup","OverlayTrigger","TaskCardWidget","Routes","TASKS_DATA","SwalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","tasks","setTasks","selectedTasksIds","filter","m","isSelected","map","id","disableMenu","length","toggleDoneStatus","t","statusKey","selectTask","newTasks","markSelectedTasksAsDone","includes","fire","deleteTasks","ids","tasksNr","textMessage","result","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","confirmMessage","archiveSelectedTasks","iconHtml","f","SingleMessage","path"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArchive, faCheckCircle, faChevronLeft, faChevronRight, faPlus, faSearch, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Form, Button, Tooltip, InputGroup, ButtonGroup, OverlayTrigger } from '@themesberg/react-bootstrap';\n\nimport { TaskCardWidget } from \"../components/Widgets\";\nimport { Routes } from \"../routes\";\nimport TASKS_DATA from \"../data/tasks\";\n\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n\n\nexport default () => {\n  const [tasks, setTasks] = useState(TASKS_DATA);\n  const selectedTasksIds = tasks.filter(m => m.isSelected).map(m => m.id);\n  const disableMenu = selectedTasksIds.length === 0;\n\n  const toggleDoneStatus = (id) => {\n    setTasks(tasks.map(t => t.id === id ? { ...t, statusKey: t.statusKey === \"done\" ? \"inProgress\" : \"done\" } : t));\n  };\n\n  const selectTask = (id) => {\n    const newTasks = tasks.map(t => {\n      const isSelected = t.id === id ? !t.isSelected : t.isSelected;\n      return { ...t, isSelected };\n    });\n\n    setTasks(newTasks);\n  };\n\n  const markSelectedTasksAsDone = async () => {\n    const newTasks = tasks.map(t => selectedTasksIds.includes(t.id) ? { ...t, \"statusKey\": \"done\" } : t);\n    setTasks(newTasks);\n\n    await SwalWithBootstrapButtons.fire(\"Successfully marked as done.\", \"\", 'success');\n  };\n\n  const deleteTasks = async (ids) => {\n    const tasksNr = ids.length;\n    const textMessage = tasksNr === 1\n      ? \"Are you sure do you want to delete this task?\"\n      : `Are you sure do you want to delete this ${tasksNr} tasks?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newTasks = tasks.filter(t => !ids.includes(t.id));\n      const confirmMessage = tasksNr === 1 ? \"The task was deleted.\" : \"The tasks were deleted.\";\n\n      setTasks(newTasks);\n      await SwalWithBootstrapButtons.fire('Deleted', confirmMessage, 'success');\n    }\n  };\n\n  const archiveSelectedTasks = async () => {\n    const tasksNr = selectedTasksIds.length;\n    const textMessage = tasksNr === 1\n      ? \"Are you sure do you want to archive this task?\"\n      : `Are you sure do you want to archive this ${tasksNr} tasks?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"question\",\n      iconHtml: `<i class=\"fas fa-archive\"></i>`,\n      title: \"Confirm archivation\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newTasks = tasks.filter(f => !selectedTasksIds.includes(f.id));\n      const confirmMessage = tasksNr === 1 ? \"The task has been archived.\" : \"The tasks were archived.\";\n\n      setTasks(newTasks);\n      await SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col xs=\"auto\" className=\"d-flex justify-content-between ps-0 mb-4 mb-lg-0\">\n          <div className=\"me-lg-3\">\n            <Button as={Link} to={Routes.SingleMessage.path} variant=\"secondary\" className=\"text-dark me-2\">\n              <FontAwesomeIcon icon={faPlus} className=\"me-2\" />\n              <span>New Tasks</span>\n            </Button>\n          </div>\n          <ButtonGroup>\n            <OverlayTrigger\n              trigger={['hover', 'focus']}\n              placement=\"bottom\"\n              overlay={<Tooltip>Archive</Tooltip>}\n            >\n              <Button variant=\"primary\" disabled={disableMenu} onClick={archiveSelectedTasks}>\n                <FontAwesomeIcon icon={faArchive} />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              trigger={['hover', 'focus']}\n              placement=\"bottom\"\n              overlay={<Tooltip>Mark as done</Tooltip>}\n            >\n              <Button variant=\"primary\" disabled={disableMenu} onClick={markSelectedTasksAsDone}>\n                <FontAwesomeIcon icon={faCheckCircle} />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              trigger={['hover', 'focus']}\n              placement=\"bottom\"\n              overlay={<Tooltip>Delete</Tooltip>}\n            >\n              <Button variant=\"primary\" disabled={disableMenu} onClick={() => deleteTasks(selectedTasksIds)}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </Button>\n            </OverlayTrigger>\n          </ButtonGroup>\n        </Col>\n\n        <Col xs={12} lg={6} className=\"px-0 mb-0\">\n          <InputGroup>\n            <InputGroup.Text>\n              <FontAwesomeIcon icon={faSearch} />\n            </InputGroup.Text>\n            <Form.Control type=\"text\" placeholder=\"Search Tasks Here\" />\n          </InputGroup>\n        </Col>\n      </div>\n\n      <div className=\"task-wrapper border bg-white border-light shadow-sm py-1 rounded\">\n        {tasks.map(t =>\n          <TaskCardWidget\n            {...t}\n            key={`task-${t.id}`}\n            selectTask={selectTask}\n            toggleDoneStatus={toggleDoneStatus}\n            deleteTask={id => deleteTasks([id])}\n          />\n        )}\n\n        <Row className=\"d-flex align-items-center p-4\">\n          <Col xs={7} className=\"mt-1\">\n            Showing 1 - {tasks.length} of 289\n          </Col>\n          <Col xs={5}>\n            <ButtonGroup className=\"float-end\">\n              <Button variant=\"light\">\n                <FontAwesomeIcon icon={faChevronLeft} />\n              </Button>\n              <Button variant=\"primary\">\n                <FontAwesomeIcon icon={faChevronRight} />\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}