{"ast":null,"code":"import React from'react';import{Col,Row,Container}from'@themesberg/react-bootstrap';import Documentation from\"../../components/Documentation\";import Progress from\"../../components/Progress\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(){return/*#__PURE__*/_jsx(\"article\",{children:/*#__PURE__*/_jsxs(Container,{className:\"px-0\",children:[/*#__PURE__*/_jsx(Row,{className:\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",children:/*#__PURE__*/_jsxs(Col,{className:\"d-block mb-4 mb-md-0\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h2\",children:\"Progress\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Use progress bars to indicate percentage based components.\"})]})}),/*#__PURE__*/_jsx(Documentation,{title:\"Example\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Progress>\"}),\" component to show progress bars or loaders for your app. You can set the value of the bar using the \",/*#__PURE__*/_jsx(\"code\",{children:\"value\"}),\" attribute. You can also change the appearance using the \",/*#__PURE__*/_jsx(\"code\",{children:\"variant=\\\"*\\\"\"}),\" attributes using the default Bootstrap color classes, such as \",/*#__PURE__*/_jsx(\"code\",{children:\"primary\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"secondary\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"danger\"}),\" and so on.\"]}),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<Progress variant=\\\"primary\\\" label=\\\"Primary color\\\" value={25} />\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Color variations\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"To update the appearance of the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Progress>\"}),\" component you can use the following classes for the \",/*#__PURE__*/_jsx(\"code\",{children:\"variant\"}),\" attribute. You can also add a label text using the \",/*#__PURE__*/_jsx(\"code\",{children:\"label=\\\"lorem ipsum\\\"\"}),\" attribute.\"]}),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<React.Fragment>\\n  <Progress variant=\\\"secondary\\\" label=\\\"Secondary color\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"Tertiary color\\\" />\\n  <Progress variant=\\\"dark\\\" label=\\\"Dark color\\\" />\\n  <Progress variant=\\\"success\\\" label=\\\"Success color\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"Info color\\\" />\\n  <Progress variant=\\\"danger\\\" label=\\\"Danger color\\\" />\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Example with tooltip labels\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"If you'd like the labels to be shown as tooltips, all you need to do is add the attribute \",/*#__PURE__*/_jsx(\"code\",{children:\"type=\\\"tooltip\\\"\"}),\" to the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Progress>\"}),\" component.\"]}),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<React.Fragment>\\n  <Progress variant=\\\"primary\\\" label=\\\"Angular\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"secondary\\\" label=\\\"Wordpress\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"Laravel\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"success\\\" label=\\\"Bootstrap\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"Angular\\\" type=\\\"tooltip\\\" />\\n  <Progress variant=\\\"danger\\\" label=\\\"Javascript\\\" type=\\\"tooltip\\\" />\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Sizing\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You can also use one of the four available sizes for the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Progress>\"}),\" updating the \",/*#__PURE__*/_jsx(\"code\",{children:\"size=\\\"*\\\"\"}),\" attribute.\"]}),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<React.Fragment>\\n  <Progress variant=\\\"primary\\\" label=\\\"XL Progress Bar\\\" size=\\\"xl\\\" />\\n  <Progress variant=\\\"secondary\\\" label=\\\"LG Progress Bar\\\" size=\\\"lg\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"MD Progress Bar\\\" size=\\\"md\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"SM Progress Bar\\\" size=\\\"sm\\\" />\\n</React.Fragment>\"})]})});});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/components/Progress.js"],"names":["React","Col","Row","Container","Documentation","Progress"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,6BAApC,CAEA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,C,wFAEA,eAAe,8BACb,sCACE,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACE,KAAC,GAAD,EAAK,SAAS,CAAC,yDAAf,uBACE,MAAC,GAAD,EAAK,SAAS,CAAC,sBAAf,wBACE,WAAI,SAAS,CAAC,IAAd,sBADF,cAEE,UAAG,SAAS,CAAC,MAAb,wEAFF,GADF,EADF,cAUE,KAAC,aAAD,EACE,KAAK,CAAC,SADR,CAEE,WAAW,cACT,6CAAW,oCAAX,sHAAiJ,+BAAjJ,0EAA4N,uCAA5N,gFAAmT,iCAAnT,mBAAyU,mCAAzU,mBAAiW,gCAAjW,iBAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,sEAPT,EAVF,cAoBE,KAAC,aAAD,EACE,KAAK,CAAC,kBADR,CAEE,WAAW,cACT,qEAAmC,oCAAnC,sEAAyH,iCAAzH,qEAAiM,+CAAjM,iBAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,sYAPT,EApBF,cAqCE,KAAC,aAAD,EACE,KAAK,CAAC,6BADR,CAEE,WAAW,cACT,+HAA6F,0CAA7F,yBAAgI,oCAAhI,iBAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,sdAPT,EArCF,cAsDE,KAAC,aAAD,EACE,KAAK,CAAC,QADR,CAEE,WAAW,cACT,8FAA4D,oCAA5D,+BAA2G,oCAA3G,iBAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,8UAPT,EAtDF,GADF,EADa,EAAf","sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Example with tooltip labels\"\n        description={\n          <p>If you'd like the labels to be shown as tooltips, all you need to do is add the attribute <code>type=\"tooltip\"</code> to the <code>&#x3C;Progress&#x3E;</code> component.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"secondary\" label=\"Wordpress\" type=\"tooltip\" />\n  <Progress variant=\"tertiary\" label=\"Laravel\" type=\"tooltip\" />\n  <Progress variant=\"success\" label=\"Bootstrap\" type=\"tooltip\" />\n  <Progress variant=\"info\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"danger\" label=\"Javascript\" type=\"tooltip\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"]},"metadata":{},"sourceType":"module"}