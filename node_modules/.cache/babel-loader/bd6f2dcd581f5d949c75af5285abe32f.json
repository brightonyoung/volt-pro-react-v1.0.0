{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/plugins/Charts.js\";\nimport React from 'react';\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nimport { trafficVolumes } from \"../../data/charts\";\nexport default (() => {\n  const lineChartSeries = trafficVolumes.map(d => d.value);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"px-0\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h2\",\n              id: \"charts\",\n              children: \"Charts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fs-5 fw-light\",\n              children: \"Use charts to present complex data with the help of bar charts, pie charts, line charts and many more.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"fs-5\",\n              children: \"Getting started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"We made sure to use the most advanced and beautiful charts for your business. Volt React makes use of the \", /*#__PURE__*/_jsxDEV(Card.Link, {\n                href: \"https://www.npmjs.com/package/react-chartist\",\n                children: \"react-chartist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 124\n              }, this), \" library and we customized some of the looks to match with the UI that we offer.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n              title: \"Line chart\",\n              description: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Here\\u2019s an example of a line chart:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this),\n              scope: {\n                Chartist,\n                ChartistTooltip,\n                series: lineChartSeries\n              },\n              example: `const labels = ['Mar 16', 'Apr 16', 'May 16', 'Jun 16', 'Jul 16', 'Aug 16', 'Sept 16'];\n                \nconst options = {\n  low: 0,\n  showArea: false,\n  fullWidth: true,\n  axisX: {\n    position: 'end',\n    showGrid: false\n  },\n  axisY: {\n    showGrid: true,\n    showLabel: true,\n    labelInterpolationFnc: value => \\`\\${(value / 1)}M\\`\n  },\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series, labels }} options={options} type=\"Line\" className=\"ct-major-tenth\" />\n);`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n              title: \"Line chart filled\",\n              description: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Here\\u2019s an example of a line chart filled:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this),\n              scope: {\n                Chartist,\n                ChartistTooltip\n              },\n              example: `const labels = [1, 2, 3, 4, 5, 6, 7, 8];\nconst series = [[5, 9, 7, 8, 5, 3, 5, 4]];\n\nconst options = {\n  low: 0,\n  showArea: true,\n  fullWidth: true,\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series, labels }} options={options} type=\"Line\" className=\"ct-major-tenth\" />\n);`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n              title: \"Bar chart\",\n              description: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Here\\u2019s an example of a bar chart:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this),\n              maxHeight: \"350px\",\n              scope: {\n                Chartist,\n                ChartistTooltip\n              },\n              example: `const labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst series = [\n  [5, 4, 3, 7, 5, 10, 3],\n  [3, 2, 9, 5, 4, 6, 4]\n];\n\nconst options = {\n  low: 0,\n  showArea: true,\n  fullWidth: true,\n  height: '300px',\n  axisX: {\n    position: 'end'\n  },\n  axisY: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0\n  },\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series, labels }} options={options} type=\"Bar\" className=\"ct-golden-section\" />\n);`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n              title: \"Pie chart\",\n              description: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Here\\u2019s an example of a pie chart:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this),\n              maxHeight: \"350px\",\n              scope: {\n                Chartist,\n                ChartistTooltip,\n                series: lineChartSeries\n              },\n              example: `\nconst series = [30, 40, 10, 20];\n\nconst sum = function(a, b) { return a + b };\nconst options = {\n  low: 0,\n  high: 8,\n  height: '300px',\n  labelInterpolationFnc: function(value) {\n    return Math.round(value / series.reduce(sum) * 100) + '%';\n  },\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series }} options={options} type=\"Pie\" className=\"ct-golden-section\" />\n);`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/plugins/Charts.js"],"names":["React","Chartist","ChartistTooltip","Row","Col","Card","Container","Documentation","trafficVolumes","lineChartSeries","map","d","value","series"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport { trafficVolumes } from \"../../data/charts\";\n\n\nexport default () => {\n  const lineChartSeries = trafficVolumes.map(d => d.value);\n\n  return (\n    <Container className=\"px-0\">\n      <Row>\n        <Col xs={12} className=\"p-3\">\n          <Card>\n            <Card.Body>\n              <h1 className=\"h2\" id=\"charts\">Charts</h1>\n              <p className=\"fs-5 fw-light\">\n                Use charts to present complex data with the help of bar charts, pie charts, line charts and many more.\n              </p>\n\n              <h2 className=\"fs-5\">Getting started</h2>\n              <p>We made sure to use the most advanced and beautiful charts for your business. Volt React makes use of the <Card.Link href=\"https://www.npmjs.com/package/react-chartist\">react-chartist</Card.Link> library and we customized some of the looks to match with the UI that we offer.</p>\n\n              <Documentation\n                title=\"Line chart\"\n                description={\n                  <p>Here’s an example of a line chart:</p>\n                }\n                scope={{ Chartist, ChartistTooltip, series: lineChartSeries }}\n                example={`const labels = ['Mar 16', 'Apr 16', 'May 16', 'Jun 16', 'Jul 16', 'Aug 16', 'Sept 16'];\n                \nconst options = {\n  low: 0,\n  showArea: false,\n  fullWidth: true,\n  axisX: {\n    position: 'end',\n    showGrid: false\n  },\n  axisY: {\n    showGrid: true,\n    showLabel: true,\n    labelInterpolationFnc: value => \\`\\${(value / 1)}M\\`\n  },\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series, labels }} options={options} type=\"Line\" className=\"ct-major-tenth\" />\n);`}\n              />\n\n              <Documentation\n                title=\"Line chart filled\"\n                description={\n                  <p>Here’s an example of a line chart filled:</p>\n                }\n                scope={{ Chartist, ChartistTooltip }}\n                example={`const labels = [1, 2, 3, 4, 5, 6, 7, 8];\nconst series = [[5, 9, 7, 8, 5, 3, 5, 4]];\n\nconst options = {\n  low: 0,\n  showArea: true,\n  fullWidth: true,\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series, labels }} options={options} type=\"Line\" className=\"ct-major-tenth\" />\n);`}\n              />\n\n              <Documentation\n                title=\"Bar chart\"\n                description={\n                  <p>Here’s an example of a bar chart:</p>\n                }\n                maxHeight='350px'\n                scope={{ Chartist, ChartistTooltip }}\n                example={`const labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst series = [\n  [5, 4, 3, 7, 5, 10, 3],\n  [3, 2, 9, 5, 4, 6, 4]\n];\n\nconst options = {\n  low: 0,\n  showArea: true,\n  fullWidth: true,\n  height: '300px',\n  axisX: {\n    position: 'end'\n  },\n  axisY: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0\n  },\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series, labels }} options={options} type=\"Bar\" className=\"ct-golden-section\" />\n);`}\n              />\n\n              <Documentation\n                title=\"Pie chart\"\n                description={\n                  <p>Here’s an example of a pie chart:</p>\n                }\n                maxHeight='350px'\n                scope={{ Chartist, ChartistTooltip, series: lineChartSeries }}\n                example={`\nconst series = [30, 40, 10, 20];\n\nconst sum = function(a, b) { return a + b };\nconst options = {\n  low: 0,\n  high: 8,\n  height: '300px',\n  labelInterpolationFnc: function(value) {\n    return Math.round(value / series.reduce(sum) * 100) + '%';\n  },\n  plugins: [ChartistTooltip()]\n};\n\nrender(\n  <Chartist data={{ series }} options={options} type=\"Pie\" className=\"ct-golden-section\" />\n);`}\n              />\n\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}