{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/components/Modals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Modal, Button, InputGroup } from '@themesberg/react-bootstrap';\nexport const EventModal = props => {\n  _s();\n\n  const [title, setTitle] = useState(props.title);\n  const [start, setStart] = useState(props.start);\n  const [end, setEnd] = useState(props.end);\n  const {\n    show = false,\n    edit = false,\n    id\n  } = props;\n  const startDate = start ? moment(start).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\");\n  const endDate = end ? moment(end).endOf(\"day\").format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\");\n\n  const onTitleChange = e => setTitle(e.target.value);\n\n  const onConfirm = () => {\n    const finalStart = moment(startDate).toDate();\n    const finalEnd = moment(endDate).toDate();\n    const payload = {\n      id,\n      title,\n      start: finalStart,\n      end: finalEnd\n    };\n\n    if (edit) {\n      return props.onUpdate && props.onUpdate(payload);\n    }\n\n    return props.onAdd && props.onAdd(payload);\n  };\n\n  const onDelete = () => edit && props.onDelete && props.onDelete(id);\n\n  const onHide = () => props.onHide && props.onHide();\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    as: Modal.Dialog,\n    centered: true,\n    show: show,\n    onHide: onHide,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"title\",\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Event title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            value: title,\n            onChange: onTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"startDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select start date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n                timeFormat: false,\n                onChange: setStart,\n                renderInput: (props, openCalendar) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faCalendarAlt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    type: \"text\",\n                    placeholder: \"YYYY-MM-DD\",\n                    value: startDate,\n                    onFocus: openCalendar,\n                    onChange: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"endDate\",\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select end date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n                timeFormat: false,\n                onChange: setEnd,\n                isValidDate: currDate => currDate.isAfter(start),\n                renderInput: (props, openCalendar) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faCalendarAlt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    type: \"text\",\n                    placeholder: \"YYYY-MM-DD\",\n                    value: endDate,\n                    onFocus: openCalendar,\n                    onChange: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"me-2\",\n          onClick: onConfirm,\n          children: edit ? \"Update event\" : \"Add new event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), edit ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: onDelete,\n          children: \"Delete event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"text-gray ms-auto\",\n          onClick: onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventModal, \"Lo7ur9aMWoowQyC787zbx0WbWbg=\");\n\n_c = EventModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/components/Modals.js"],"names":["React","useState","moment","Datetime","FontAwesomeIcon","faCalendarAlt","Col","Row","Form","Modal","Button","InputGroup","EventModal","props","title","setTitle","start","setStart","end","setEnd","show","edit","id","startDate","format","endDate","endOf","onTitleChange","e","target","value","onConfirm","finalStart","toDate","finalEnd","payload","onUpdate","onAdd","onDelete","onHide","Dialog","openCalendar","currDate","isAfter"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,UAAxC,QAA0D,6BAA1D;AAGA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACY,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACY,KAAK,CAACG,KAAP,CAAlC;AACA,QAAM,CAACE,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAACY,KAAK,CAACK,GAAP,CAA9B;AAEA,QAAM;AAAEE,IAAAA,IAAI,GAAG,KAAT;AAAgBC,IAAAA,IAAI,GAAG,KAAvB;AAA8BC,IAAAA;AAA9B,MAAqCT,KAA3C;AACA,QAAMU,SAAS,GAAGP,KAAK,GAAGd,MAAM,CAACc,KAAD,CAAN,CAAcQ,MAAd,CAAqB,YAArB,CAAH,GAAwCtB,MAAM,GAAGsB,MAAT,CAAgB,YAAhB,CAA/D;AACA,QAAMC,OAAO,GAAGP,GAAG,GAAGhB,MAAM,CAACgB,GAAD,CAAN,CAAYQ,KAAZ,CAAkB,KAAlB,EAAyBF,MAAzB,CAAgC,YAAhC,CAAH,GAAmDtB,MAAM,GAAGsB,MAAT,CAAgB,YAAhB,CAAtE;;AAEA,QAAMG,aAAa,GAAIC,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAArC;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,UAAU,GAAG9B,MAAM,CAACqB,SAAD,CAAN,CAAkBU,MAAlB,EAAnB;AACA,UAAMC,QAAQ,GAAGhC,MAAM,CAACuB,OAAD,CAAN,CAAgBQ,MAAhB,EAAjB;AACA,UAAME,OAAO,GAAG;AAAEb,MAAAA,EAAF;AAAMR,MAAAA,KAAN;AAAaE,MAAAA,KAAK,EAAEgB,UAApB;AAAgCd,MAAAA,GAAG,EAAEgB;AAArC,KAAhB;;AAEA,QAAIb,IAAJ,EAAU;AACR,aAAOR,KAAK,CAACuB,QAAN,IAAkBvB,KAAK,CAACuB,QAAN,CAAeD,OAAf,CAAzB;AACD;;AAED,WAAOtB,KAAK,CAACwB,KAAN,IAAexB,KAAK,CAACwB,KAAN,CAAYF,OAAZ,CAAtB;AACD,GAVD;;AAWA,QAAMG,QAAQ,GAAG,MAAMjB,IAAI,IAAIR,KAAK,CAACyB,QAAd,IAA0BzB,KAAK,CAACyB,QAAN,CAAehB,EAAf,CAAjD;;AACA,QAAMiB,MAAM,GAAG,MAAM1B,KAAK,CAAC0B,MAAN,IAAgB1B,KAAK,CAAC0B,MAAN,EAArC;;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,EAAE,EAAE9B,KAAK,CAAC+B,MAAjB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAEpB,IAAxC;AAA8C,IAAA,MAAM,EAAEmB,MAAtD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,8BACE,QAAC,KAAD,CAAO,IAAP;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,OAAf;AAAuB,UAAA,SAAS,EAAC,MAAjC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAEzB,KAJT;AAKE,YAAA,QAAQ,EAAEa;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,CAAjB;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,WAAf;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AACE,gBAAA,UAAU,EAAE,KADd;AAEE,gBAAA,QAAQ,EAAEV,QAFZ;AAGE,gBAAA,WAAW,EAAE,CAACJ,KAAD,EAAQ4B,YAAR,kBACX,QAAC,UAAD;AAAA,0CACE,QAAC,UAAD,CAAY,IAAZ;AAAA,2CACE,QAAC,eAAD;AAAiB,sBAAA,IAAI,EAAEpC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,QAAQ,MADV;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,WAAW,EAAC,YAHd;AAIE,oBAAA,KAAK,EAAEkB,SAJT;AAKE,oBAAA,OAAO,EAAEkB,YALX;AAME,oBAAA,QAAQ,EAAE,MAAM,CAAG;AANrB;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAuBE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,CAAjB;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAC,SAAf;AAAyB,cAAA,SAAS,EAAC,MAAnC;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AACE,gBAAA,UAAU,EAAE,KADd;AAEE,gBAAA,QAAQ,EAAEtB,MAFZ;AAGE,gBAAA,WAAW,EAAEuB,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB3B,KAAjB,CAH3B;AAIE,gBAAA,WAAW,EAAE,CAACH,KAAD,EAAQ4B,YAAR,kBACX,QAAC,UAAD;AAAA,0CACE,QAAC,UAAD,CAAY,IAAZ;AAAA,2CACE,QAAC,eAAD;AAAiB,sBAAA,IAAI,EAAEpC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,QAAQ,MADV;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,WAAW,EAAC,YAHd;AAIE,oBAAA,KAAK,EAAEoB,OAJT;AAKE,oBAAA,OAAO,EAAEgB,YALX;AAME,oBAAA,QAAQ,EAAE,MAAM,CAAG;AANrB;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2DE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,SAAS,EAAC,MAApC;AAA2C,UAAA,OAAO,EAAEV,SAApD;AAAA,oBACGV,IAAI,GAAG,cAAH,GAAoB;AAD3B;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGA,IAAI,gBACH,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAEiB,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,GAID,IATN,eAWE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,SAAS,EAAC,mBAAjC;AAAqD,UAAA,OAAO,EAAEC,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+ED,CAxGM;;GAAM3B,U;;KAAAA,U","sourcesContent":["\nimport React, { useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Modal, Button, InputGroup } from '@themesberg/react-bootstrap';\n\n\nexport const EventModal = (props) => {\n  const [title, setTitle] = useState(props.title);\n  const [start, setStart] = useState(props.start);\n  const [end, setEnd] = useState(props.end);\n\n  const { show = false, edit = false, id } = props;\n  const startDate = start ? moment(start).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\");\n  const endDate = end ? moment(end).endOf(\"day\").format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\");\n\n  const onTitleChange = (e) => setTitle(e.target.value);\n\n  const onConfirm = () => {\n    const finalStart = moment(startDate).toDate();\n    const finalEnd = moment(endDate).toDate();\n    const payload = { id, title, start: finalStart, end: finalEnd };\n\n    if (edit) {\n      return props.onUpdate && props.onUpdate(payload);\n    }\n\n    return props.onAdd && props.onAdd(payload);\n  }\n  const onDelete = () => edit && props.onDelete && props.onDelete(id);\n  const onHide = () => props.onHide && props.onHide();\n\n  return (\n    <Modal as={Modal.Dialog} centered show={show} onHide={onHide}>\n      <Form className=\"modal-content\">\n        <Modal.Body>\n          <Form.Group id=\"title\" className=\"mb-4\">\n            <Form.Label>Event title</Form.Label>\n            <Form.Control\n              required\n              autoFocus\n              type=\"text\"\n              value={title}\n              onChange={onTitleChange} />\n          </Form.Group>\n          <Row>\n            <Col xs={12} lg={6}>\n              <Form.Group id=\"startDate\">\n                <Form.Label>Select start date</Form.Label>\n                <Datetime\n                  timeFormat={false}\n                  onChange={setStart}\n                  renderInput={(props, openCalendar) => (\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faCalendarAlt} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"YYYY-MM-DD\"\n                        value={startDate}\n                        onFocus={openCalendar}\n                        onChange={() => { }} />\n                    </InputGroup>\n                  )} />\n              </Form.Group>\n            </Col>\n            <Col xs={12} lg={6}>\n              <Form.Group id=\"endDate\" className=\"mb-2\">\n                <Form.Label>Select end date</Form.Label>\n                <Datetime\n                  timeFormat={false}\n                  onChange={setEnd}\n                  isValidDate={currDate => currDate.isAfter(start)}\n                  renderInput={(props, openCalendar) => (\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faCalendarAlt} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"YYYY-MM-DD\"\n                        value={endDate}\n                        onFocus={openCalendar}\n                        onChange={() => { }} />\n                    </InputGroup>\n                  )} />\n              </Form.Group>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" className=\"me-2\" onClick={onConfirm}>\n            {edit ? \"Update event\" : \"Add new event\"}\n          </Button>\n\n          {edit ? (\n            <Button variant=\"danger\" onClick={onDelete}>\n              Delete event\n            </Button>\n          ) : null}\n\n          <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}