{"ast":null,"code":"import _slicedToArray from\"/workspace/volt-pro-react-v1.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{CopyToClipboard}from'react-copy-to-clipboard';import{Col,Row,Card,Button,Tooltip,OverlayTrigger}from'@themesberg/react-bootstrap';import{LiveProvider,LiveEditor,LiveError,LivePreview}from'react-live';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faQuestionCircle}from'@fortawesome/free-regular-svg-icons';import Code from\"./Code\";import themeStyle from\"../assets/syntax-themes/ghcolors.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var _props$language=props.language,language=_props$language===void 0?\"jsx\":_props$language,_props$scope=props.scope,scope=_props$scope===void 0?{}:_props$scope,_props$imports=props.imports,imports=_props$imports===void 0?null:_props$imports,_props$maxHeight=props.maxHeight,maxHeight=_props$maxHeight===void 0?'none':_props$maxHeight;var _useState=useState(props.code),_useState2=_slicedToArray(_useState,2),code=_useState2[0],setCode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),copied=_useState4[0],setCopied=_useState4[1];var noInline=code.includes('render(');var handleCodeChange=function handleCodeChange(newCode){setCode(newCode);};var handleCopy=function handleCopy(){setCopied(true);setTimeout(function(){return setCopied(false);},2000);};return/*#__PURE__*/_jsx(LiveProvider,{noInline:noInline,code:code,language:language,theme:themeStyle,scope:scope,children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,className:\"mb-4\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{style:{maxHeight:maxHeight},children:/*#__PURE__*/_jsx(LivePreview,{})})})}),imports?/*#__PURE__*/_jsx(Col,{xs:12,className:\"mb-4\",children:/*#__PURE__*/_jsx(Code,{code:imports})}):null,/*#__PURE__*/_jsxs(Col,{xs:12,className:\"mb-4\",children:[/*#__PURE__*/_jsx(LiveError,{className:\"alert alert-danger\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"fs-7 mb-2 d-block text-gray-600\",children:[/*#__PURE__*/_jsx(OverlayTrigger,{trigger:['hover','focus'],placement:\"top\",overlay:/*#__PURE__*/_jsx(Tooltip,{children:\"You can edit the code below and the changes will be seen in the example above.\"}),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faQuestionCircle,className:\"me-2\"})}),\"Live React Code Editor\"]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{className:\"position-relative\",children:[/*#__PURE__*/_jsx(LiveEditor,{onChange:handleCodeChange,className:\"live-editor\"}),copied?/*#__PURE__*/_jsx(\"span\",{className:\"text-success copy-code-text\",children:\"Copied\"}):null,/*#__PURE__*/_jsx(OverlayTrigger,{trigger:['hover','focus'],placement:\"top\",overlay:/*#__PURE__*/_jsx(Tooltip,{children:\"Copy to clipboard\"}),children:/*#__PURE__*/_jsx(CopyToClipboard,{text:code,onCopy:handleCopy,children:/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"primary\",className:\"copy-code-button\",children:\"Copy\"})})})]})})]})]})});});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/components/CodeEditor.js"],"names":["React","useState","CopyToClipboard","Col","Row","Card","Button","Tooltip","OverlayTrigger","LiveProvider","LiveEditor","LiveError","LivePreview","FontAwesomeIcon","faQuestionCircle","Code","themeStyle","props","language","scope","imports","maxHeight","code","setCode","copied","setCopied","noInline","includes","handleCodeChange","newCode","handleCopy","setTimeout"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Col, Row, Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\nimport Code from \"./Code\";\n\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\n\nexport default (props) => {\n  const { language = \"jsx\", scope = {}, imports = null, maxHeight = 'none' } = props;\n  const [code, setCode] = useState(props.code);\n  const [copied, setCopied] = useState(false);\n  const noInline = code.includes('render(');\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <LiveProvider noInline={noInline} code={code} language={language} theme={themeStyle} scope={scope}>\n      <Row>\n        <Col xs={12} className=\"mb-4\">\n          <Card>\n            <Card.Body style={{ maxHeight: maxHeight }}>\n              <LivePreview />\n            </Card.Body>\n          </Card>\n        </Col>\n        {imports ? (\n          <Col xs={12} className=\"mb-4\">\n            <Code code={imports} />\n          </Col>\n        ) : null}\n        <Col xs={12} className=\"mb-4\">\n          <LiveError className=\"alert alert-danger\" />\n\n          <span className=\"fs-7 mb-2 d-block text-gray-600\">\n            <OverlayTrigger trigger={['hover', 'focus']} placement=\"top\" overlay={<Tooltip>You can edit the code below and the changes will be seen in the example above.</Tooltip>}>\n              <FontAwesomeIcon icon={faQuestionCircle} className=\"me-2\" />\n            </OverlayTrigger>\n            Live React Code Editor\n          </span>\n\n          <Card>\n            <Card.Body className=\"position-relative\">\n\n              <LiveEditor onChange={handleCodeChange} className=\"live-editor\" />\n\n              {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\n\n              <OverlayTrigger\n                trigger={['hover', 'focus']}\n                placement=\"top\"\n                overlay={<Tooltip>Copy to clipboard</Tooltip>}\n              >\n                <CopyToClipboard text={code} onCopy={handleCopy}>\n                  <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\n                </CopyToClipboard>\n              </OverlayTrigger>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </LiveProvider>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}