{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArchive, faChevronDown, faChevronLeft, faChevronRight, faEnvelope, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Button, Dropdown, ButtonGroup, OverlayTrigger, Tooltip } from '@themesberg/react-bootstrap';\nimport { MessageCardWidget } from \"../components/Widgets\";\nimport { Routes } from \"../routes\";\nimport MESSAGES_DATA from \"../data/messages\";\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\nexport default _s(() => {\n  _s();\n\n  const [messages, setMessages] = useState(MESSAGES_DATA);\n  const selectedMessageIds = messages.filter(m => m.isSelected).map(m => m.id);\n  const disableMenu = selectedMessageIds.length === 0;\n\n  const selectMessage = id => {\n    const newMessages = messages.map(m => {\n      const isSelected = m.id === id ? !m.isSelected : m.isSelected;\n      return { ...m,\n        isSelected\n      };\n    });\n    setMessages(newMessages);\n  };\n\n  const toggleReadStatus = id => {\n    setMessages(messages.map(m => m.id === id ? { ...m,\n      read: !m.read\n    } : m));\n  };\n\n  const markSelectedMessagesAsUnread = () => {\n    const newMessages = messages.map(m => selectedMessageIds.includes(m.id) ? { ...m,\n      read: false\n    } : m);\n    setMessages(newMessages);\n  };\n\n  const deleteMessages = async ids => {\n    const messagesNr = ids.length;\n    const textMessage = messagesNr === 1 ? \"Are you sure do you want to delete this message?\" : `Are you sure do you want to delete this ${messagesNr} messages?`;\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newMessages = messages.filter(f => !ids.includes(f.id));\n      const confirmMessage = messagesNr === 1 ? \"The message was deleted.\" : \"The messages were deleted.\";\n      setMessages(newMessages);\n      await SwalWithBootstrapButtons.fire('Deleted', confirmMessage, 'success');\n    }\n  };\n\n  const archiveSelectedMessages = async () => {\n    const messagesNr = selectedMessageIds.length;\n    const textMessage = messagesNr === 1 ? \"Are you sure do you want to archive this message?\" : `Are you sure do you want to archive this ${messagesNr} messages?`;\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"question\",\n      iconHtml: `<i class=\"fas fa-archive\"></i>`,\n      title: \"Confirm archivation\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newMessages = messages.filter(f => !selectedMessageIds.includes(f.id));\n      const confirmMessage = messagesNr === 1 ? \"The message has been archived.\" : \"The messages were archived.\";\n      setMessages(newMessages);\n      await SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center pb-2 pt-4 pb-md-4\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        to: Routes.SingleMessage.path,\n        variant: \"secondary\",\n        className: \"text-dark mb-3 mb-md-0\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus,\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Compose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-block d-sm-flex\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n          className: \"mb-3 me-3 mb-md-0 d-none d-md-inline-flex\",\n          children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: ['hover', 'focus'],\n            placement: \"bottom\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Mark as Unread\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: disableMenu,\n              onClick: markSelectedMessagesAsUnread,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEnvelope\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: ['hover', 'focus'],\n            placement: \"bottom\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Archive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: disableMenu,\n              onClick: archiveSelectedMessages,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faArchive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: ['hover', 'focus'],\n            placement: \"bottom\",\n            overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 24\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: disableMenu,\n              onClick: () => deleteMessages(selectedMessageIds),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mb-3 mb-md-0\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            as: Button,\n            variant: \"primary\",\n            className: \" arrow-none\",\n            disabled: disableMenu,\n            children: [\"More \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon icon-small ms-1\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faChevronDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.ItemText, {\n              className: \"fw-bold text-dark w-100\",\n              children: \"More options:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: \"Add to Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: \"Add Star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: \"Mute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-wrapper border bg-white border-light shadow-sm py-1 rounded\",\n      children: [messages.map(m => /*#__PURE__*/_createElement(MessageCardWidget, { ...m,\n        key: `message-${m.id}`,\n        selectMessage: selectMessage,\n        toggleReadStatus: toggleReadStatus,\n        deleteMessage: id => deleteMessages([id]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex align-items-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 7,\n          className: \"mt-1\",\n          children: [\"Showing 1 - \", messages.length, \" of 289\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            className: \"float-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faChevronLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faChevronRight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"NnftDBh4XtaZqo9jsYmOqHMCBLM=\");","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/Messages.js"],"names":["React","useState","Swal","withReactContent","Link","FontAwesomeIcon","faArchive","faChevronDown","faChevronLeft","faChevronRight","faEnvelope","faPlus","faTrashAlt","Col","Row","Button","Dropdown","ButtonGroup","OverlayTrigger","Tooltip","MessageCardWidget","Routes","MESSAGES_DATA","SwalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","messages","setMessages","selectedMessageIds","filter","m","isSelected","map","id","disableMenu","length","selectMessage","newMessages","toggleReadStatus","read","markSelectedMessagesAsUnread","includes","deleteMessages","ids","messagesNr","textMessage","result","fire","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","f","confirmMessage","archiveSelectedMessages","iconHtml","SingleMessage","path"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArchive, faChevronDown, faChevronLeft, faChevronRight, faEnvelope, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Button, Dropdown, ButtonGroup, OverlayTrigger, Tooltip } from '@themesberg/react-bootstrap';\n\nimport { MessageCardWidget } from \"../components/Widgets\";\nimport { Routes } from \"../routes\";\nimport MESSAGES_DATA from \"../data/messages\";\n\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n\nexport default () => {\n  const [messages, setMessages] = useState(MESSAGES_DATA);\n  const selectedMessageIds = messages.filter(m => m.isSelected).map(m => m.id);\n  const disableMenu = selectedMessageIds.length === 0;\n\n  const selectMessage = (id) => {\n    const newMessages = messages.map(m => {\n      const isSelected = m.id === id ? !m.isSelected : m.isSelected;\n      return { ...m, isSelected };\n    });\n\n    setMessages(newMessages);\n  };\n\n  const toggleReadStatus = (id) => {\n    setMessages(messages.map(m => m.id === id ? { ...m, read: !m.read } : m));\n  };\n\n  const markSelectedMessagesAsUnread = () => {\n    const newMessages = messages.map(m => selectedMessageIds.includes(m.id) ? { ...m, read: false } : m);\n    setMessages(newMessages);\n  };\n\n  const deleteMessages = async (ids) => {\n    const messagesNr = ids.length;\n    const textMessage = messagesNr === 1\n      ? \"Are you sure do you want to delete this message?\"\n      : `Are you sure do you want to delete this ${messagesNr} messages?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"error\",\n      title: \"Confirm deletion\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newMessages = messages.filter(f => !ids.includes(f.id));\n      const confirmMessage = messagesNr === 1 ? \"The message was deleted.\" : \"The messages were deleted.\";\n\n      setMessages(newMessages);\n      await SwalWithBootstrapButtons.fire('Deleted', confirmMessage, 'success');\n    }\n  };\n\n  const archiveSelectedMessages = async () => {\n    const messagesNr = selectedMessageIds.length;\n    const textMessage = messagesNr === 1\n      ? \"Are you sure do you want to archive this message?\"\n      : `Are you sure do you want to archive this ${messagesNr} messages?`;\n\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: \"question\",\n      iconHtml: `<i class=\"fas fa-archive\"></i>`,\n      title: \"Confirm archivation\",\n      text: textMessage,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"Cancel\"\n    });\n\n    if (result.isConfirmed) {\n      const newMessages = messages.filter(f => !selectedMessageIds.includes(f.id));\n      const confirmMessage = messagesNr === 1 ? \"The message has been archived.\" : \"The messages were archived.\";\n\n      setMessages(newMessages);\n      await SwalWithBootstrapButtons.fire('Archived', confirmMessage, 'success');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between align-items-center pb-2 pt-4 pb-md-4\">\n        <Button as={Link} to={Routes.SingleMessage.path} variant=\"secondary\" className=\"text-dark mb-3 mb-md-0\">\n          <FontAwesomeIcon icon={faPlus} className=\"me-2\" />\n          <span>Compose</span>\n        </Button>\n        <div className=\"d-block d-sm-flex\">\n          <ButtonGroup className=\"mb-3 me-3 mb-md-0 d-none d-md-inline-flex\">\n            <OverlayTrigger\n              trigger={['hover', 'focus']}\n              placement=\"bottom\"\n              overlay={<Tooltip>Mark as Unread</Tooltip>}\n            >\n              <Button variant=\"primary\" disabled={disableMenu} onClick={markSelectedMessagesAsUnread} >\n                <FontAwesomeIcon icon={faEnvelope} />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              trigger={['hover', 'focus']}\n              placement=\"bottom\"\n              overlay={<Tooltip>Archive</Tooltip>}\n            >\n              <Button variant=\"primary\" disabled={disableMenu} onClick={archiveSelectedMessages} >\n                <FontAwesomeIcon icon={faArchive} />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              trigger={['hover', 'focus']}\n              placement=\"bottom\"\n              overlay={<Tooltip>Delete</Tooltip>}\n            >\n              <Button variant=\"primary\" disabled={disableMenu} onClick={() => deleteMessages(selectedMessageIds)}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </Button>\n            </OverlayTrigger>\n          </ButtonGroup>\n\n          <Dropdown className=\"mb-3 mb-md-0\">\n            <Dropdown.Toggle as={Button} variant=\"primary\" className=\" arrow-none\" disabled={disableMenu}>\n              More <span className=\"icon icon-small ms-1\"><FontAwesomeIcon icon={faChevronDown} /></span>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.ItemText className=\"fw-bold text-dark w-100\">\n                More options:\n              </Dropdown.ItemText>\n              <Dropdown.Item>Add to Tasks</Dropdown.Item>\n              <Dropdown.Item>Add Star</Dropdown.Item>\n              <Dropdown.Item>Mute</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n\n      <div className=\"message-wrapper border bg-white border-light shadow-sm py-1 rounded\">\n        {messages.map(m => (\n          <MessageCardWidget\n            {...m}\n            key={`message-${m.id}`}\n            selectMessage={selectMessage}\n            toggleReadStatus={toggleReadStatus}\n            deleteMessage={id => deleteMessages([id])}\n          />\n        ))}\n\n        <Row className=\"d-flex align-items-center p-4\">\n          <Col xs={7} className=\"mt-1\">\n            Showing 1 - {messages.length} of 289\n          </Col>\n          <Col xs={5}>\n            <ButtonGroup className=\"float-end\">\n              <Button variant=\"light\">\n                <FontAwesomeIcon icon={faChevronLeft} />\n              </Button>\n              <Button variant=\"primary\">\n                <FontAwesomeIcon icon={faChevronRight} />\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}