{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/components/Charts.js\";\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nexport const SalesValueChart = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-double-octave\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = SalesValueChart;\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-major-tenth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SalesValueChartphone;\nexport const CircleChart = props => {\n  const {\n    series = [],\n    donutWidth = 20\n  } = props;\n\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: {\n      series\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c3 = CircleChart;\nexport const BarChart = props => {\n  const {\n    labels = [],\n    series = [],\n    chartClassName = \"ct-golden-section\"\n  } = props;\n  const data = {\n    labels,\n    series\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Bar\",\n    className: chartClassName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_c4 = BarChart;\nexport const PieChart = props => {\n  const {\n    series = []\n  } = props;\n\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: {\n      series\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_c5 = PieChart;\nexport const DognutChart = props => {\n  const {\n    series = []\n  } = props;\n\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donut: true,\n    donutWidth: 80,\n    startAngle: 270,\n    showLabel: true,\n    donutSolid: true,\n    fullWidth: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: {\n      series\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_c6 = DognutChart;\nexport const LineGraphChart = props => {\n  const {\n    series = []\n  } = props;\n  const labels = ['Mar 16', 'Apr 16', 'May 16', 'Jun 16', 'Jul 16', 'Aug 16', 'Sept 16'];\n  const options = {\n    low: 0,\n    showArea: false,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: false\n    },\n    axisY: {\n      showGrid: true,\n      showLabel: true,\n      labelInterpolationFnc: value => `${value / 1}M`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/_jsxDEV(Chartist, {\n    data: {\n      series,\n      labels\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-major-tenth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_c7 = LineGraphChart;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SalesValueChart\");\n$RefreshReg$(_c2, \"SalesValueChartphone\");\n$RefreshReg$(_c3, \"CircleChart\");\n$RefreshReg$(_c4, \"BarChart\");\n$RefreshReg$(_c5, \"PieChart\");\n$RefreshReg$(_c6, \"DognutChart\");\n$RefreshReg$(_c7, \"LineGraphChart\");","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/components/Charts.js"],"names":["React","Chartist","ChartistTooltip","SalesValueChart","data","labels","series","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","plugins","SalesValueChartphone","CircleChart","props","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","chartClassName","offset","PieChart","DognutChart","startAngle","LineGraphChart"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\n\nexport const SalesValueChart = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\n  );\n};\n\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\n  );\n};\n\nexport const CircleChart = (props) => {\n  const { series = [], donutWidth = 20 } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  }\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const BarChart = (props) => {\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\n  const data = { labels, series };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\n  );\n};\n\nexport const PieChart = (props) => {\n  const { series = [] } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const DognutChart = (props) => {\n  const { series = [] } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donut: true,\n    donutWidth: 80,\n    startAngle: 270,\n    showLabel: true,\n    donutSolid: true,\n    fullWidth: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const LineGraphChart = (props) => {\n  const { series = [] } = props;\n  const labels = ['Mar 16', 'Apr 16', 'May 16', 'Jun 16', 'Jul 16', 'Aug 16', 'Sept 16'];\n\n  const options = {\n    low: 0,\n    showArea: false,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: false\n    },\n    axisY: {\n      showGrid: true,\n      showLabel: true,\n      labelInterpolationFnc: value => `${(value / 1)}M`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series, labels }} options={{...options, plugins}} type=\"Line\" className=\"ct-major-tenth\" />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}