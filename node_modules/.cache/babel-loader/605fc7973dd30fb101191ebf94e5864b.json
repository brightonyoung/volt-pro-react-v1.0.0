{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/components/Buttons.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faThumbsUp, faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faPinterest, faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from '@fortawesome/free-brands-svg-icons';\nimport { Col, Row, Button, Spinner, Container, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nexport default (() => {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"px-0\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"d-block mb-4 mb-md-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h2\",\n            children: \"Buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0\",\n            children: \"Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Example\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }, this), \" component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 225\n          }, this), \" attribute.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"info\" className=\"m-1\">Info</Button>\n  <Button variant=\"success\" className=\"m-1\">Success</Button>\n  <Button variant=\"warning\" className=\"m-1\">Warning</Button>\n  <Button variant=\"danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"dark\" className=\"m-1\">Dark</Button>\n  <Button variant=\"gray\" className=\"m-1\">Gray</Button>\n  <Button variant=\"light\" className=\"m-1\">Light</Button>\n  <Button variant=\"white\" className=\"m-1\">White</Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Button sizing\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this), \" component comes with three main sizing options: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 100\n          }, this), \", default, and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 130\n          }, this), \". In order to change the size of the button you need to set the size using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 224\n          }, this), \" attribute.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button variant=\"primary\" size=\"sm\" className=\"me-1\">Small</Button>\n  <Button variant=\"primary\" className=\"me-1\">Regular</Button>\n  <Button variant=\"primary\" size=\"lg\" className=\"me-1\">Large Button</Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Buttons with outline\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Instead of a fully colored background, you can also choose to style the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 88\n          }, this), \" component to only have an outline border by using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"outline-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 174\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"outline-secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 204\n          }, this), \" modifier classes inside the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 263\n          }, this), \" attribute.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"outline-tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"outline-info\" className=\"m-1\">Info</Button>\n  <Button variant=\"outline-success\" className=\"m-1\">Success</Button>\n  <Button variant=\"outline-danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"outline-dark\" className=\"m-1\">Dark</Button>\n  <Button variant=\"outline-gray\" className=\"m-1\">Gray</Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Link buttons\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"If you want to use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 39\n          }, this), \" component, but without the appearance of a button, just use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"bsPrefix=\\\"text\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 135\n          }, this), \" attribute to create link styled buttons.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button bsPrefix=\"text\" href=\"#primary\" variant=\"primary\" className=\"m-3\">Primary</Button>\n  <Button bsPrefix=\"text\" href=\"#secondary\" variant=\"secondary\" className=\"m-3\">Secondary</Button>\n  <Button bsPrefix=\"text\" href=\"#tertiary\" variant=\"tertiary\" className=\"m-3\">Tertiary</Button>\n  <Button bsPrefix=\"text\" href=\"#info\" variant=\"info\" className=\"m-3\">Info</Button>\n  <Button bsPrefix=\"text\" href=\"#success\" variant=\"success\" className=\"m-3\">Success</Button>\n  <Button bsPrefix=\"text\" href=\"#danger\" variant=\"danger\" className=\"m-3\">Danger</Button>\n  <Button bsPrefix=\"text\" href=\"#dark\" variant=\"dark\" className=\"m-3\">Dark</Button>\n  <Button bsPrefix=\"text\" href=\"#gray\" variant=\"gray\" className=\"m-3\">Gray</Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Buttons with icon\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You may want to use icons inside the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 53\n          }, this), \" component, which can be done by simply adding a \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<FontAwesomeIcon>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 133\n          }, this), \" component inside the button element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button,\n          FontAwesomeIcon,\n          faHeart,\n          faThumbsUp\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";`,\n        example: `<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">\n    <FontAwesomeIcon icon={faHeart} className=\"me-2\" /> Primary\n  </Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">\n    <FontAwesomeIcon icon={faThumbsUp} className=\"me-2\" /> Secondary\n  </Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Circle buttons\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"btn-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 136\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"btn-icon-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 164\n          }, this), \" if you wish to use only icons inside the button.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button,\n          FontAwesomeIcon,\n          faFacebook,\n          faPinterest\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebook, faPinterest } from \"@fortawesome/free-brands-svg-icons\";`,\n        example: `<React.Fragment>\n  <Button className=\"btn-icon-only btn-circle btn-facebook m-1\">\n    <FontAwesomeIcon icon={faFacebook} />\n  </Button>\n  <Button className=\"btn-icon-only btn-circle btn-pinterest m-1\">\n    <FontAwesomeIcon icon={faPinterest} />\n  </Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Social media buttons\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"We've also built social media specific button styles, so all you need to do to add the specific colors is to update the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 136\n          }, this), \" attribute by adding values, such as \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"facebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 193\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 216\n          }, this), \", or \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"pinterest.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 241\n          }, this), \". You can also add a \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<FontAwesomeIcon>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 285\n          }, this), \" component to use the logo of the social media platforms as an icon.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button,\n          FontAwesomeIcon,\n          faFacebookF,\n          faPinterestP,\n          faYoutube,\n          faGithubAlt,\n          faTwitch,\n          faPaypal,\n          faBehance\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from \"@fortawesome/free-brands-svg-icons\";`,\n        example: `<React.Fragment>\n  <Button variant=\"facebook\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faFacebookF} className=\"me-1\" />\n      Login with Facebook\n  </Button>\n  <Button variant=\"pinterest\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faPinterestP} className=\"me-1\" />\n      Share on Pinterest\n  </Button>\n  <Button variant=\"youtube\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faYoutube} className=\"me-1\" />\n      Watch on YouTube\n  </Button>\n  <Button variant=\"github\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faGithubAlt} className=\"me-1\" />\n      Login with GitHub\n  </Button>\n  <Button variant=\"twitch\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faTwitch} className=\"me-1\" />\n      Subscribe Now\n  </Button>\n  <Button variant=\"paypal\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faPaypal} className=\"me-1\" />\n      Donate with PayPal\n  </Button>\n  <Button variant=\"behance\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faBehance} className=\"me-1\" />\n      Follow us\n  </Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Loading buttons\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"disabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 175\n          }, this), \" modifier attribute and use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Spinner>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 228\n          }, this), \" component inside the button.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button,\n          Spinner\n        },\n        imports: `import { Button, Spinner } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"me-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n  <Button disabled variant=\"primary\" className=\"me-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n    <span className=\"ms-1\">Loading...</span>\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"me-1\">\n    <span className=\"me-1\">Loading...</span>\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Block level Buttons\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 141\n          }, this), \" class to the component.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<Button variant=\"secondary\" color=\"dark\" className=\"w-100\">Block</Button>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Disabled state\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You may want to disable the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 44\n          }, this), \" component for various reasons, so you need to add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"disabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 130\n          }, this), \" attribute in order to achieve that.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"mb-2 me-2\">\n    Primary button\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"mb-2 me-2\">\n    Button\n  </Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Button animations\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 140\n          }, this), \" component, all you need to do is use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"animate-up-*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 213\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"animate-right-*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 240\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"animate-down-*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 270\n          }, this), \", or \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"animate-left-*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 302\n          }, this), \", where the * can be a number from 1 to 5 changing in the animation intensity.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button\n        },\n        imports: `import { Button } from '@themesberg/react-bootstrap';`,\n        example: `<React.Fragment>\n  <Button variant=\"primary\" className=\"animate-up-2 mb-2 me-2\">Animate up</Button>\n  <Button variant=\"secondary\" className=\"animate-right-3 mb-2 me-2\">Animate right</Button>\n  <Button variant=\"tertiary\" className=\"animate-left-3 mb-2 me-2\">Animate left</Button>\n  <Button variant=\"success\" className=\"animate-down-2 mb-2 me-2\">Animate down</Button>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Dropdown buttons\",\n        description: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<Dropdown>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 26\n            }, this), \" component coupled with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<Button>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 87\n            }, this), \" component in order to create dropdown items when clicking on a button. The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \" <Dropdown.Toggle>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 194\n            }, this), \" is the component that will trigger the dropdown menu, while the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<Dropdown.Menu>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 300\n            }, this), \" is the actual menu where you can add the dropdown items.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<Button>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 22\n            }, this), \" component is used either before or after the toggle component, but all of this is wrapped around with the main \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<Dropdown>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 165\n            }, this), \" component.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        scope: {\n          Button,\n          Dropdown,\n          ButtonGroup,\n          FontAwesomeIcon,\n          faAngleDown\n        },\n        imports: `import { Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`,\n        example: `<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"primary\">Primary</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup} className=\"mb-2 me-2\">\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Dropdown sizing\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You may want to use one of the three main sizing options for the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Dropdown>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 81\n          }, this), \" component, so in order to do that you only need to use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"size=\\\"md\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 174\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"size=\\\"lg\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 200\n          }, this), \" attributes for the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Button>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 242\n          }, this), \" component inside the dropdown component.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button,\n          Dropdown,\n          ButtonGroup,\n          FontAwesomeIcon,\n          faAngleDown\n        },\n        imports: `import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`,\n        example: `<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Small</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Default</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Large</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n        title: \"Dropdown direction\",\n        description: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"If you want to change the direction of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"<Dropdown>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 59\n          }, this), \" component, you can do that by using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"direction=\\\"*\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 133\n          }, this), \" attribute where you can use \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 188\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 205\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 225\n          }, this), \", or \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 247\n          }, this), \" as attribute values.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this),\n        scope: {\n          Button,\n          Dropdown,\n          ButtonGroup,\n          FontAwesomeIcon,\n          faAngleDown,\n          faAngleUp,\n          faAngleLeft,\n          faAngleRight\n        },\n        imports: `import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";`,\n        example: `<React.Fragment>\n  <Dropdown drop={faAngleUp} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Up</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleUp} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleRight} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Right</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <FontAwesomeIcon icon={faAngleRight} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Down</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleLeft} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Left</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleLeft} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/components/Buttons.js"],"names":["React","FontAwesomeIcon","faHeart","faThumbsUp","faAngleDown","faAngleUp","faAngleLeft","faAngleRight","faFacebook","faPinterest","faFacebookF","faPinterestP","faYoutube","faGithubAlt","faTwitch","faPaypal","faBehance","Col","Row","Button","Spinner","Container","Dropdown","ButtonGroup","Documentation"],"mappings":"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;AAAA;AAAA;AAAA,gBAHJ;AAKE,QAAA,KAAK,EAAE;AAAEe,UAAAA,MAAF;AAAUG,UAAAA,QAAV;AAAoBC,UAAAA,WAApB;AAAiCtB,UAAAA,eAAjC;AAAkDG,UAAAA,WAAlD;AAA+DC,UAAAA,SAA/D;AAA0EC,UAAAA,WAA1E;AAAuFC,UAAAA;AAAvF,SALT;AAME,QAAA,OAAO,EAAG;AACpB;AACA,uGARQ;AASE,QAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEQ;AAAA;AAAA;AAAA;AAAA,cA5UF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6ZD,CA9ZD","sourcesContent":["\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faThumbsUp, faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faPinterest, faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from '@fortawesome/free-brands-svg-icons';\nimport { Col, Row, Button, Spinner, Container, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\n\n\nexport default () => {\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Buttons</h1>\n            <p className=\"mb-0\">\n              Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"info\" className=\"m-1\">Info</Button>\n  <Button variant=\"success\" className=\"m-1\">Success</Button>\n  <Button variant=\"warning\" className=\"m-1\">Warning</Button>\n  <Button variant=\"danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"dark\" className=\"m-1\">Dark</Button>\n  <Button variant=\"gray\" className=\"m-1\">Gray</Button>\n  <Button variant=\"light\" className=\"m-1\">Light</Button>\n  <Button variant=\"white\" className=\"m-1\">White</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button sizing\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component comes with three main sizing options: <code>sm</code>, default, and <code>lg</code>. In order to change the size of the button you need to set the size using the <code>size</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" size=\"sm\" className=\"me-1\">Small</Button>\n  <Button variant=\"primary\" className=\"me-1\">Regular</Button>\n  <Button variant=\"primary\" size=\"lg\" className=\"me-1\">Large Button</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with outline\"\n          description={\n            <p>Instead of a fully colored background, you can also choose to style the <code>&#x3C;Button&#x3E;</code> component to only have an outline border by using the <code>outline-primary</code>, <code>outline-secondary</code> modifier classes inside the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"outline-tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"outline-info\" className=\"m-1\">Info</Button>\n  <Button variant=\"outline-success\" className=\"m-1\">Success</Button>\n  <Button variant=\"outline-danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"outline-dark\" className=\"m-1\">Dark</Button>\n  <Button variant=\"outline-gray\" className=\"m-1\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Link buttons\"\n          description={\n            <p>If you want to use the <code>&#x3C;Button&#x3E;</code> component, but without the appearance of a button, just use the <code>bsPrefix=\"text\"</code> attribute to create link styled buttons.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button bsPrefix=\"text\" href=\"#primary\" variant=\"primary\" className=\"m-3\">Primary</Button>\n  <Button bsPrefix=\"text\" href=\"#secondary\" variant=\"secondary\" className=\"m-3\">Secondary</Button>\n  <Button bsPrefix=\"text\" href=\"#tertiary\" variant=\"tertiary\" className=\"m-3\">Tertiary</Button>\n  <Button bsPrefix=\"text\" href=\"#info\" variant=\"info\" className=\"m-3\">Info</Button>\n  <Button bsPrefix=\"text\" href=\"#success\" variant=\"success\" className=\"m-3\">Success</Button>\n  <Button bsPrefix=\"text\" href=\"#danger\" variant=\"danger\" className=\"m-3\">Danger</Button>\n  <Button bsPrefix=\"text\" href=\"#dark\" variant=\"dark\" className=\"m-3\">Dark</Button>\n  <Button bsPrefix=\"text\" href=\"#gray\" variant=\"gray\" className=\"m-3\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with icon\"\n          description={\n            <p>You may want to use icons inside the <code>&#x3C;Button&#x3E;</code> component, which can be done by simply adding a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component inside the button element.</p>\n          }\n          scope={{ Button, FontAwesomeIcon, faHeart, faThumbsUp }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">\n    <FontAwesomeIcon icon={faHeart} className=\"me-2\" /> Primary\n  </Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">\n    <FontAwesomeIcon icon={faThumbsUp} className=\"me-2\" /> Secondary\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Circle buttons\"\n          description={\n            <p>If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of <code>btn-circle</code> and <code>btn-icon-only</code> if you wish to use only icons inside the button.</p>\n          }\n          scope={{ Button, FontAwesomeIcon, faFacebook, faPinterest }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebook, faPinterest } from \"@fortawesome/free-brands-svg-icons\";`}\n          example={`<React.Fragment>\n  <Button className=\"btn-icon-only btn-circle btn-facebook m-1\">\n    <FontAwesomeIcon icon={faFacebook} />\n  </Button>\n  <Button className=\"btn-icon-only btn-circle btn-pinterest m-1\">\n    <FontAwesomeIcon icon={faPinterest} />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Social media buttons\"\n          description={\n            <p>We've also built social media specific button styles, so all you need to do to add the specific colors is to update the <code>variant</code> attribute by adding values, such as <code>facebook</code>, <code>twitter</code>, or <code>pinterest.</code>. You can also add a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component to use the logo of the social media platforms as an icon.</p>\n          }\n          scope={{ Button, FontAwesomeIcon, faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from \"@fortawesome/free-brands-svg-icons\";`}\n          example={`<React.Fragment>\n  <Button variant=\"facebook\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faFacebookF} className=\"me-1\" />\n      Login with Facebook\n  </Button>\n  <Button variant=\"pinterest\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faPinterestP} className=\"me-1\" />\n      Share on Pinterest\n  </Button>\n  <Button variant=\"youtube\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faYoutube} className=\"me-1\" />\n      Watch on YouTube\n  </Button>\n  <Button variant=\"github\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faGithubAlt} className=\"me-1\" />\n      Login with GitHub\n  </Button>\n  <Button variant=\"twitch\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faTwitch} className=\"me-1\" />\n      Subscribe Now\n  </Button>\n  <Button variant=\"paypal\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faPaypal} className=\"me-1\" />\n      Donate with PayPal\n  </Button>\n  <Button variant=\"behance\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faBehance} className=\"me-1\" />\n      Follow us\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Loading buttons\"\n          description={\n            <p>By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the <code>disabled</code> modifier attribute and use the <code>&#x3C;Spinner&#x3E;</code> component inside the button.</p>\n          }\n          scope={{ Button, Spinner }}\n          imports={`import { Button, Spinner } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"me-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n  <Button disabled variant=\"primary\" className=\"me-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n    <span className=\"ms-1\">Loading...</span>\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"me-1\">\n    <span className=\"me-1\">Loading...</span>\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Block level Buttons\"\n          description={\n            <p>Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the <code>w-100</code> class to the component.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<Button variant=\"secondary\" color=\"dark\" className=\"w-100\">Block</Button>`}\n        />\n\n        <Documentation\n          title=\"Disabled state\"\n          description={\n            <p>You may want to disable the <code>&#x3C;Button&#x3E;</code> component for various reasons, so you need to add the <code>disabled</code> attribute in order to achieve that.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"mb-2 me-2\">\n    Primary button\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"mb-2 me-2\">\n    Button\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button animations\"\n          description={\n            <p>We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the <code>&#x3C;Button&#x3E;</code> component, all you need to do is use the <code>animate-up-*</code>, <code>animate-right-*</code>, <code>animate-down-*</code>, or <code>animate-left-*</code>, where the * can be a number from 1 to 5 changing in the animation intensity.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"animate-up-2 mb-2 me-2\">Animate up</Button>\n  <Button variant=\"secondary\" className=\"animate-right-3 mb-2 me-2\">Animate right</Button>\n  <Button variant=\"tertiary\" className=\"animate-left-3 mb-2 me-2\">Animate left</Button>\n  <Button variant=\"success\" className=\"animate-down-2 mb-2 me-2\">Animate down</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown buttons\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Dropdown&#x3E;</code> component coupled with the <code>&#x3C;Button&#x3E;</code> component in order to create dropdown items when clicking on a button. The <code> &#x3C;Dropdown.Toggle&#x3E;</code> is the component that will trigger the dropdown menu, while the <code>&#x3C;Dropdown.Menu&#x3E;</code> is the actual menu where you can add the dropdown items.</p>\n              <p>The <code>&#x3C;Button&#x3E;</code> component is used either before or after the toggle component, but all of this is wrapped around with the main <code>&#x3C;Dropdown&#x3E;</code> component.</p>\n            </>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown }}\n          imports={`import { Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"primary\">Primary</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup} className=\"mb-2 me-2\">\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown sizing\"\n          description={\n            <p>You may want to use one of the three main sizing options for the <code>&#x3C;Dropdown&#x3E;</code> component, so in order to do that you only need to use the <code>size=\"md\"</code> or <code>size=\"lg\"</code> attributes for the <code>&#x3C;Button&#x3E;</code> component inside the dropdown component.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown }}\n          imports={`import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Small</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Default</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Large</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown direction\"\n          description={\n            <p>If you want to change the direction of the <code>&#x3C;Dropdown&#x3E;</code> component, you can do that by using the <code>direction=\"*\"</code> attribute where you can use <code>up</code>, <code>right</code>, <code>down</code>, or <code>left</code> as attribute values.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown, faAngleUp, faAngleLeft, faAngleRight }}\n          imports={`import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Dropdown drop={faAngleUp} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Up</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleUp} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleRight} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Right</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <FontAwesomeIcon icon={faAngleRight} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Down</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleLeft} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Left</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleLeft} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}