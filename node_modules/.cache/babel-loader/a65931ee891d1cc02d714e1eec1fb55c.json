{"ast":null,"code":"import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faHeart,faThumbsUp,faAngleDown,faAngleUp,faAngleLeft,faAngleRight}from'@fortawesome/free-solid-svg-icons';import{faFacebook,faPinterest,faFacebookF,faPinterestP,faYoutube,faGithubAlt,faTwitch,faPaypal,faBehance}from'@fortawesome/free-brands-svg-icons';import{Col,Row,Button,Spinner,Container,Dropdown,ButtonGroup}from'@themesberg/react-bootstrap';import Documentation from\"../../components/Documentation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default(function(){return/*#__PURE__*/_jsx(\"article\",{children:/*#__PURE__*/_jsxs(Container,{className:\"px-0\",children:[/*#__PURE__*/_jsx(Row,{className:\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",children:/*#__PURE__*/_jsxs(Col,{className:\"d-block mb-4 mb-md-0\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h2\",children:\"Buttons\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\"})]})}),/*#__PURE__*/_jsx(Documentation,{title:\"Example\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the \",/*#__PURE__*/_jsx(\"code\",{children:\"variant\"}),\" attribute.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"m-1\\\">Primary</Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"m-1\\\">Secondary</Button>\\n  <Button variant=\\\"tertiary\\\" className=\\\"m-1\\\">Tertiary</Button>\\n  <Button variant=\\\"info\\\" className=\\\"m-1\\\">Info</Button>\\n  <Button variant=\\\"success\\\" className=\\\"m-1\\\">Success</Button>\\n  <Button variant=\\\"warning\\\" className=\\\"m-1\\\">Warning</Button>\\n  <Button variant=\\\"danger\\\" className=\\\"m-1\\\">Danger</Button>\\n  <Button variant=\\\"dark\\\" className=\\\"m-1\\\">Dark</Button>\\n  <Button variant=\\\"gray\\\" className=\\\"m-1\\\">Gray</Button>\\n  <Button variant=\\\"light\\\" className=\\\"m-1\\\">Light</Button>\\n  <Button variant=\\\"white\\\" className=\\\"m-1\\\">White</Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Button sizing\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component comes with three main sizing options: \",/*#__PURE__*/_jsx(\"code\",{children:\"sm\"}),\", default, and \",/*#__PURE__*/_jsx(\"code\",{children:\"lg\"}),\". In order to change the size of the button you need to set the size using the \",/*#__PURE__*/_jsx(\"code\",{children:\"size\"}),\" attribute.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" size=\\\"sm\\\" className=\\\"me-1\\\">Small</Button>\\n  <Button variant=\\\"primary\\\" className=\\\"me-1\\\">Regular</Button>\\n  <Button variant=\\\"primary\\\" size=\\\"lg\\\" className=\\\"me-1\\\">Large Button</Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Buttons with outline\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Instead of a fully colored background, you can also choose to style the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component to only have an outline border by using the \",/*#__PURE__*/_jsx(\"code\",{children:\"outline-primary\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"outline-secondary\"}),\" modifier classes inside the \",/*#__PURE__*/_jsx(\"code\",{children:\"variant\"}),\" attribute.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"outline-primary\\\" className=\\\"m-1\\\">Primary</Button>\\n  <Button variant=\\\"outline-secondary\\\" className=\\\"m-1\\\">Secondary</Button>\\n  <Button variant=\\\"outline-tertiary\\\" className=\\\"m-1\\\">Tertiary</Button>\\n  <Button variant=\\\"outline-info\\\" className=\\\"m-1\\\">Info</Button>\\n  <Button variant=\\\"outline-success\\\" className=\\\"m-1\\\">Success</Button>\\n  <Button variant=\\\"outline-danger\\\" className=\\\"m-1\\\">Danger</Button>\\n  <Button variant=\\\"outline-dark\\\" className=\\\"m-1\\\">Dark</Button>\\n  <Button variant=\\\"outline-gray\\\" className=\\\"m-1\\\">Gray</Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Link buttons\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"If you want to use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component, but without the appearance of a button, just use the \",/*#__PURE__*/_jsx(\"code\",{children:\"bsPrefix=\\\"text\\\"\"}),\" attribute to create link styled buttons.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#primary\\\" variant=\\\"primary\\\" className=\\\"m-3\\\">Primary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#secondary\\\" variant=\\\"secondary\\\" className=\\\"m-3\\\">Secondary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#tertiary\\\" variant=\\\"tertiary\\\" className=\\\"m-3\\\">Tertiary</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#info\\\" variant=\\\"info\\\" className=\\\"m-3\\\">Info</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#success\\\" variant=\\\"success\\\" className=\\\"m-3\\\">Success</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#danger\\\" variant=\\\"danger\\\" className=\\\"m-3\\\">Danger</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#dark\\\" variant=\\\"dark\\\" className=\\\"m-3\\\">Dark</Button>\\n  <Button bsPrefix=\\\"text\\\" href=\\\"#gray\\\" variant=\\\"gray\\\" className=\\\"m-3\\\">Gray</Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Buttons with icon\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You may want to use icons inside the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component, which can be done by simply adding a \",/*#__PURE__*/_jsx(\"code\",{children:\"<FontAwesomeIcon>\"}),\" component inside the button element.\"]}),scope:{Button:Button,FontAwesomeIcon:FontAwesomeIcon,faHeart:faHeart,faThumbsUp:faThumbsUp},imports:\"import { Button } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faHeart, faThumbsUp } from \\\"@fortawesome/free-solid-svg-icons\\\";\",example:\"<React.Fragment>\\n  <Button variant=\\\"outline-primary\\\" className=\\\"m-1\\\">\\n    <FontAwesomeIcon icon={faHeart} className=\\\"me-2\\\" /> Primary\\n  </Button>\\n  <Button variant=\\\"outline-secondary\\\" className=\\\"m-1\\\">\\n    <FontAwesomeIcon icon={faThumbsUp} className=\\\"me-2\\\" /> Secondary\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Circle buttons\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of \",/*#__PURE__*/_jsx(\"code\",{children:\"btn-circle\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"btn-icon-only\"}),\" if you wish to use only icons inside the button.\"]}),scope:{Button:Button,FontAwesomeIcon:FontAwesomeIcon,faFacebook:faFacebook,faPinterest:faPinterest},imports:\"import { Button } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faFacebook, faPinterest } from \\\"@fortawesome/free-brands-svg-icons\\\";\",example:\"<React.Fragment>\\n  <Button className=\\\"btn-icon-only btn-circle btn-facebook m-1\\\">\\n    <FontAwesomeIcon icon={faFacebook} />\\n  </Button>\\n  <Button className=\\\"btn-icon-only btn-circle btn-pinterest m-1\\\">\\n    <FontAwesomeIcon icon={faPinterest} />\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Social media buttons\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"We've also built social media specific button styles, so all you need to do to add the specific colors is to update the \",/*#__PURE__*/_jsx(\"code\",{children:\"variant\"}),\" attribute by adding values, such as \",/*#__PURE__*/_jsx(\"code\",{children:\"facebook\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"twitter\"}),\", or \",/*#__PURE__*/_jsx(\"code\",{children:\"pinterest.\"}),\". You can also add a \",/*#__PURE__*/_jsx(\"code\",{children:\"<FontAwesomeIcon>\"}),\" component to use the logo of the social media platforms as an icon.\"]}),scope:{Button:Button,FontAwesomeIcon:FontAwesomeIcon,faFacebookF:faFacebookF,faPinterestP:faPinterestP,faYoutube:faYoutube,faGithubAlt:faGithubAlt,faTwitch:faTwitch,faPaypal:faPaypal,faBehance:faBehance},imports:\"import { Button } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from \\\"@fortawesome/free-brands-svg-icons\\\";\",example:\"<React.Fragment>\\n  <Button variant=\\\"facebook\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faFacebookF} className=\\\"me-1\\\" />\\n      Login with Facebook\\n  </Button>\\n  <Button variant=\\\"pinterest\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faPinterestP} className=\\\"me-1\\\" />\\n      Share on Pinterest\\n  </Button>\\n  <Button variant=\\\"youtube\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faYoutube} className=\\\"me-1\\\" />\\n      Watch on YouTube\\n  </Button>\\n  <Button variant=\\\"github\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faGithubAlt} className=\\\"me-1\\\" />\\n      Login with GitHub\\n  </Button>\\n  <Button variant=\\\"twitch\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faTwitch} className=\\\"me-1\\\" />\\n      Subscribe Now\\n  </Button>\\n  <Button variant=\\\"paypal\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faPaypal} className=\\\"me-1\\\" />\\n      Donate with PayPal\\n  </Button>\\n  <Button variant=\\\"behance\\\" className=\\\"me-3 mb-3\\\">\\n    <FontAwesomeIcon icon={faBehance} className=\\\"me-1\\\" />\\n      Follow us\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Loading buttons\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the \",/*#__PURE__*/_jsx(\"code\",{children:\"disabled\"}),\" modifier attribute and use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Spinner>\"}),\" component inside the button.\"]}),scope:{Button:Button,Spinner:Spinner},imports:\"import { Button, Spinner } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button disabled variant=\\\"primary\\\" className=\\\"me-1\\\">\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  </Button>\\n  <Button disabled variant=\\\"primary\\\" className=\\\"me-1\\\">\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n    <span className=\\\"ms-1\\\">Loading...</span>\\n  </Button>\\n  <Button disabled variant=\\\"secondary\\\" className=\\\"me-1\\\">\\n    <span className=\\\"me-1\\\">Loading...</span>\\n    <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Block level Buttons\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the \",/*#__PURE__*/_jsx(\"code\",{children:\"w-100\"}),\" class to the component.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<Button variant=\\\"secondary\\\" color=\\\"dark\\\" className=\\\"w-100\\\">Block</Button>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Disabled state\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You may want to disable the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component for various reasons, so you need to add the \",/*#__PURE__*/_jsx(\"code\",{children:\"disabled\"}),\" attribute in order to achieve that.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button disabled variant=\\\"primary\\\" className=\\\"mb-2 me-2\\\">\\n    Primary button\\n  </Button>\\n  <Button disabled variant=\\\"secondary\\\" className=\\\"mb-2 me-2\\\">\\n    Button\\n  </Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Button animations\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component, all you need to do is use the \",/*#__PURE__*/_jsx(\"code\",{children:\"animate-up-*\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"animate-right-*\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"animate-down-*\"}),\", or \",/*#__PURE__*/_jsx(\"code\",{children:\"animate-left-*\"}),\", where the * can be a number from 1 to 5 changing in the animation intensity.\"]}),scope:{Button:Button},imports:\"import { Button } from '@themesberg/react-bootstrap';\",example:\"<React.Fragment>\\n  <Button variant=\\\"primary\\\" className=\\\"animate-up-2 mb-2 me-2\\\">Animate up</Button>\\n  <Button variant=\\\"secondary\\\" className=\\\"animate-right-3 mb-2 me-2\\\">Animate right</Button>\\n  <Button variant=\\\"tertiary\\\" className=\\\"animate-left-3 mb-2 me-2\\\">Animate left</Button>\\n  <Button variant=\\\"success\\\" className=\\\"animate-down-2 mb-2 me-2\\\">Animate down</Button>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Dropdown buttons\",description:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Use the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Dropdown>\"}),\" component coupled with the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component in order to create dropdown items when clicking on a button. The \",/*#__PURE__*/_jsx(\"code\",{children:\" <Dropdown.Toggle>\"}),\" is the component that will trigger the dropdown menu, while the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Dropdown.Menu>\"}),\" is the actual menu where you can add the dropdown items.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component is used either before or after the toggle component, but all of this is wrapped around with the main \",/*#__PURE__*/_jsx(\"code\",{children:\"<Dropdown>\"}),\" component.\"]})]}),scope:{Button:Button,Dropdown:Dropdown,ButtonGroup:ButtonGroup,FontAwesomeIcon:FontAwesomeIcon,faAngleDown:faAngleDown},imports:\"import { Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faAngleDown } from \\\"@fortawesome/free-solid-svg-icons\\\";\",example:\"<React.Fragment>\\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"primary\\\">Primary</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <FontAwesomeIcon icon={faAngleDown} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown as={ButtonGroup} className=\\\"mb-2 me-2\\\">\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <FontAwesomeIcon icon={faAngleDown} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Dropdown sizing\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"You may want to use one of the three main sizing options for the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Dropdown>\"}),\" component, so in order to do that you only need to use the \",/*#__PURE__*/_jsx(\"code\",{children:\"size=\\\"md\\\"\"}),\" or \",/*#__PURE__*/_jsx(\"code\",{children:\"size=\\\"lg\\\"\"}),\" attributes for the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Button>\"}),\" component inside the dropdown component.\"]}),scope:{Button:Button,Dropdown:Dropdown,ButtonGroup:ButtonGroup,FontAwesomeIcon:FontAwesomeIcon,faAngleDown:faAngleDown},imports:\"import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faAngleDown } from \\\"@fortawesome/free-solid-svg-icons\\\";\",example:\"<React.Fragment>\\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"sm\\\" variant=\\\"primary\\\">Small</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <FontAwesomeIcon icon={faAngleDown} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"secondary\\\">Default</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"secondary\\\">\\n      <FontAwesomeIcon icon={faAngleDown} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Large</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <FontAwesomeIcon icon={faAngleDown} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\"}),/*#__PURE__*/_jsx(Documentation,{title:\"Dropdown direction\",description:/*#__PURE__*/_jsxs(\"p\",{children:[\"If you want to change the direction of the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Dropdown>\"}),\" component, you can do that by using the \",/*#__PURE__*/_jsx(\"code\",{children:\"direction=\\\"*\\\"\"}),\" attribute where you can use \",/*#__PURE__*/_jsx(\"code\",{children:\"up\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"right\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"down\"}),\", or \",/*#__PURE__*/_jsx(\"code\",{children:\"left\"}),\" as attribute values.\"]}),scope:{Button:Button,Dropdown:Dropdown,ButtonGroup:ButtonGroup,FontAwesomeIcon:FontAwesomeIcon,faAngleDown:faAngleDown,faAngleUp:faAngleUp,faAngleLeft:faAngleLeft,faAngleRight:faAngleRight},imports:\"import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from \\\"@fortawesome/free-solid-svg-icons\\\";\",example:\"<React.Fragment>\\n  <Dropdown drop={faAngleUp} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"sm\\\" variant=\\\"primary\\\">Up</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"primary\\\">\\n      <FontAwesomeIcon icon={faAngleUp} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop={faAngleRight} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button variant=\\\"secondary\\\">Right</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"secondary\\\">\\n      <FontAwesomeIcon icon={faAngleRight} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Down</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <FontAwesomeIcon icon={faAngleDown} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown drop={faAngleLeft} as={ButtonGroup} className=\\\"me-2 mb-2\\\">\\n    <Button size=\\\"lg\\\" variant=\\\"tertiary\\\">Left</Button>\\n\\n    <Dropdown.Toggle split variant=\\\"tertiary\\\">\\n      <FontAwesomeIcon icon={faAngleLeft} className=\\\"dropdown-arrow\\\" />\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu>\\n      <Dropdown.Item href=\\\"#action\\\">Action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#action\\\">Something else here</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#action\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</React.Fragment>\"})]})});});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/components/Buttons.js"],"names":["React","FontAwesomeIcon","faHeart","faThumbsUp","faAngleDown","faAngleUp","faAngleLeft","faAngleRight","faFacebook","faPinterest","faFacebookF","faPinterestP","faYoutube","faGithubAlt","faTwitch","faPaypal","faBehance","Col","Row","Button","Spinner","Container","Dropdown","ButtonGroup","Documentation"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faThumbsUp, faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faPinterest, faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from '@fortawesome/free-brands-svg-icons';\nimport { Col, Row, Button, Spinner, Container, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\n\n\nexport default () => {\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Buttons</h1>\n            <p className=\"mb-0\">\n              Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"info\" className=\"m-1\">Info</Button>\n  <Button variant=\"success\" className=\"m-1\">Success</Button>\n  <Button variant=\"warning\" className=\"m-1\">Warning</Button>\n  <Button variant=\"danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"dark\" className=\"m-1\">Dark</Button>\n  <Button variant=\"gray\" className=\"m-1\">Gray</Button>\n  <Button variant=\"light\" className=\"m-1\">Light</Button>\n  <Button variant=\"white\" className=\"m-1\">White</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button sizing\"\n          description={\n            <p>The <code>&#x3C;Button&#x3E;</code> component comes with three main sizing options: <code>sm</code>, default, and <code>lg</code>. In order to change the size of the button you need to set the size using the <code>size</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" size=\"sm\" className=\"me-1\">Small</Button>\n  <Button variant=\"primary\" className=\"me-1\">Regular</Button>\n  <Button variant=\"primary\" size=\"lg\" className=\"me-1\">Large Button</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with outline\"\n          description={\n            <p>Instead of a fully colored background, you can also choose to style the <code>&#x3C;Button&#x3E;</code> component to only have an outline border by using the <code>outline-primary</code>, <code>outline-secondary</code> modifier classes inside the <code>variant</code> attribute.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">Primary</Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">Secondary</Button>\n  <Button variant=\"outline-tertiary\" className=\"m-1\">Tertiary</Button>\n  <Button variant=\"outline-info\" className=\"m-1\">Info</Button>\n  <Button variant=\"outline-success\" className=\"m-1\">Success</Button>\n  <Button variant=\"outline-danger\" className=\"m-1\">Danger</Button>\n  <Button variant=\"outline-dark\" className=\"m-1\">Dark</Button>\n  <Button variant=\"outline-gray\" className=\"m-1\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Link buttons\"\n          description={\n            <p>If you want to use the <code>&#x3C;Button&#x3E;</code> component, but without the appearance of a button, just use the <code>bsPrefix=\"text\"</code> attribute to create link styled buttons.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button bsPrefix=\"text\" href=\"#primary\" variant=\"primary\" className=\"m-3\">Primary</Button>\n  <Button bsPrefix=\"text\" href=\"#secondary\" variant=\"secondary\" className=\"m-3\">Secondary</Button>\n  <Button bsPrefix=\"text\" href=\"#tertiary\" variant=\"tertiary\" className=\"m-3\">Tertiary</Button>\n  <Button bsPrefix=\"text\" href=\"#info\" variant=\"info\" className=\"m-3\">Info</Button>\n  <Button bsPrefix=\"text\" href=\"#success\" variant=\"success\" className=\"m-3\">Success</Button>\n  <Button bsPrefix=\"text\" href=\"#danger\" variant=\"danger\" className=\"m-3\">Danger</Button>\n  <Button bsPrefix=\"text\" href=\"#dark\" variant=\"dark\" className=\"m-3\">Dark</Button>\n  <Button bsPrefix=\"text\" href=\"#gray\" variant=\"gray\" className=\"m-3\">Gray</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Buttons with icon\"\n          description={\n            <p>You may want to use icons inside the <code>&#x3C;Button&#x3E;</code> component, which can be done by simply adding a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component inside the button element.</p>\n          }\n          scope={{ Button, FontAwesomeIcon, faHeart, faThumbsUp }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Button variant=\"outline-primary\" className=\"m-1\">\n    <FontAwesomeIcon icon={faHeart} className=\"me-2\" /> Primary\n  </Button>\n  <Button variant=\"outline-secondary\" className=\"m-1\">\n    <FontAwesomeIcon icon={faThumbsUp} className=\"me-2\" /> Secondary\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Circle buttons\"\n          description={\n            <p>If you'd like to create a button with a fully circled appearance, all you need to do is add the two modifier classes of <code>btn-circle</code> and <code>btn-icon-only</code> if you wish to use only icons inside the button.</p>\n          }\n          scope={{ Button, FontAwesomeIcon, faFacebook, faPinterest }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebook, faPinterest } from \"@fortawesome/free-brands-svg-icons\";`}\n          example={`<React.Fragment>\n  <Button className=\"btn-icon-only btn-circle btn-facebook m-1\">\n    <FontAwesomeIcon icon={faFacebook} />\n  </Button>\n  <Button className=\"btn-icon-only btn-circle btn-pinterest m-1\">\n    <FontAwesomeIcon icon={faPinterest} />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Social media buttons\"\n          description={\n            <p>We've also built social media specific button styles, so all you need to do to add the specific colors is to update the <code>variant</code> attribute by adding values, such as <code>facebook</code>, <code>twitter</code>, or <code>pinterest.</code>. You can also add a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component to use the logo of the social media platforms as an icon.</p>\n          }\n          scope={{ Button, FontAwesomeIcon, faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookF, faPinterestP, faYoutube, faGithubAlt, faTwitch, faPaypal, faBehance } from \"@fortawesome/free-brands-svg-icons\";`}\n          example={`<React.Fragment>\n  <Button variant=\"facebook\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faFacebookF} className=\"me-1\" />\n      Login with Facebook\n  </Button>\n  <Button variant=\"pinterest\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faPinterestP} className=\"me-1\" />\n      Share on Pinterest\n  </Button>\n  <Button variant=\"youtube\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faYoutube} className=\"me-1\" />\n      Watch on YouTube\n  </Button>\n  <Button variant=\"github\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faGithubAlt} className=\"me-1\" />\n      Login with GitHub\n  </Button>\n  <Button variant=\"twitch\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faTwitch} className=\"me-1\" />\n      Subscribe Now\n  </Button>\n  <Button variant=\"paypal\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faPaypal} className=\"me-1\" />\n      Donate with PayPal\n  </Button>\n  <Button variant=\"behance\" className=\"me-3 mb-3\">\n    <FontAwesomeIcon icon={faBehance} className=\"me-1\" />\n      Follow us\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Loading buttons\"\n          description={\n            <p>By using React you can easily set the state of buttons to be disabled and in a loading state, before the data comes through from the back-end. You can add the <code>disabled</code> modifier attribute and use the <code>&#x3C;Spinner&#x3E;</code> component inside the button.</p>\n          }\n          scope={{ Button, Spinner }}\n          imports={`import { Button, Spinner } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"me-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n  <Button disabled variant=\"primary\" className=\"me-1\">\n    <Spinner animation=\"border\" size=\"sm\" />\n    <span className=\"ms-1\">Loading...</span>\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"me-1\">\n    <span className=\"me-1\">Loading...</span>\n    <Spinner animation=\"border\" size=\"sm\" />\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Block level Buttons\"\n          description={\n            <p>Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the <code>w-100</code> class to the component.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<Button variant=\"secondary\" color=\"dark\" className=\"w-100\">Block</Button>`}\n        />\n\n        <Documentation\n          title=\"Disabled state\"\n          description={\n            <p>You may want to disable the <code>&#x3C;Button&#x3E;</code> component for various reasons, so you need to add the <code>disabled</code> attribute in order to achieve that.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button disabled variant=\"primary\" className=\"mb-2 me-2\">\n    Primary button\n  </Button>\n  <Button disabled variant=\"secondary\" className=\"mb-2 me-2\">\n    Button\n  </Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Button animations\"\n          description={\n            <p>We've added some handy animations for when any element in the UI is hovered upon, so if you want to add an animation to the <code>&#x3C;Button&#x3E;</code> component, all you need to do is use the <code>animate-up-*</code>, <code>animate-right-*</code>, <code>animate-down-*</code>, or <code>animate-left-*</code>, where the * can be a number from 1 to 5 changing in the animation intensity.</p>\n          }\n          scope={{ Button }}\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\n          example={`<React.Fragment>\n  <Button variant=\"primary\" className=\"animate-up-2 mb-2 me-2\">Animate up</Button>\n  <Button variant=\"secondary\" className=\"animate-right-3 mb-2 me-2\">Animate right</Button>\n  <Button variant=\"tertiary\" className=\"animate-left-3 mb-2 me-2\">Animate left</Button>\n  <Button variant=\"success\" className=\"animate-down-2 mb-2 me-2\">Animate down</Button>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown buttons\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Dropdown&#x3E;</code> component coupled with the <code>&#x3C;Button&#x3E;</code> component in order to create dropdown items when clicking on a button. The <code> &#x3C;Dropdown.Toggle&#x3E;</code> is the component that will trigger the dropdown menu, while the <code>&#x3C;Dropdown.Menu&#x3E;</code> is the actual menu where you can add the dropdown items.</p>\n              <p>The <code>&#x3C;Button&#x3E;</code> component is used either before or after the toggle component, but all of this is wrapped around with the main <code>&#x3C;Dropdown&#x3E;</code> component.</p>\n            </>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown }}\n          imports={`import { Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"primary\">Primary</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup} className=\"mb-2 me-2\">\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown sizing\"\n          description={\n            <p>You may want to use one of the three main sizing options for the <code>&#x3C;Dropdown&#x3E;</code> component, so in order to do that you only need to use the <code>size=\"md\"</code> or <code>size=\"lg\"</code> attributes for the <code>&#x3C;Button&#x3E;</code> component inside the dropdown component.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown }}\n          imports={`import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Small</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Default</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Large</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n        <Documentation\n          title=\"Dropdown direction\"\n          description={\n            <p>If you want to change the direction of the <code>&#x3C;Dropdown&#x3E;</code> component, you can do that by using the <code>direction=\"*\"</code> attribute where you can use <code>up</code>, <code>right</code>, <code>down</code>, or <code>left</code> as attribute values.</p>\n          }\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown, faAngleUp, faAngleLeft, faAngleRight }}\n          imports={`import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<React.Fragment>\n  <Dropdown drop={faAngleUp} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"sm\" variant=\"primary\">Up</Button>\n\n    <Dropdown.Toggle split variant=\"primary\">\n      <FontAwesomeIcon icon={faAngleUp} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleRight} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button variant=\"secondary\">Right</Button>\n\n    <Dropdown.Toggle split variant=\"secondary\">\n      <FontAwesomeIcon icon={faAngleRight} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Down</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown drop={faAngleLeft} as={ButtonGroup} className=\"me-2 mb-2\">\n    <Button size=\"lg\" variant=\"tertiary\">Left</Button>\n\n    <Dropdown.Toggle split variant=\"tertiary\">\n      <FontAwesomeIcon icon={faAngleLeft} className=\"dropdown-arrow\" />\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</React.Fragment>`}\n        />\n\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}