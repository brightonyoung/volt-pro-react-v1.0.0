{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/components/Progress.js\";\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\nexport default (() => /*#__PURE__*/_jsxDEV(\"article\", {\n  children: /*#__PURE__*/_jsxDEV(Container, {\n    className: \"px-0\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"d-block mb-4 mb-md-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h2\",\n          children: \"Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: \"Use progress bars to indicate percentage based components.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n      title: \"Example\",\n      description: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Progress>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this), \" component to show progress bars or loaders for your app. You can set the value of the bar using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 156\n        }, this), \" attribute. You can also change the appearance using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"variant=\\\"*\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 231\n        }, this), \" attributes using the default Bootstrap color classes, such as \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 318\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 340\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 364\n        }, this), \" and so on.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this),\n      scope: {\n        Progress\n      },\n      imports: `import Progress from \"src/components/Progress\";`,\n      example: `<Progress variant=\"primary\" label=\"Primary color\" value={25} />`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n      title: \"Color variations\",\n      description: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To update the appearance of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Progress>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 46\n        }, this), \" component you can use the following classes for the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"variant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 132\n        }, this), \" attribute. You can also add a label text using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"label=\\\"lorem ipsum\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 204\n        }, this), \" attribute.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this),\n      scope: {\n        Progress\n      },\n      imports: `import Progress from \"src/components/Progress\";`,\n      example: `<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n      title: \"Example with tooltip labels\",\n      description: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"If you'd like the labels to be shown as tooltips, all you need to do is add the attribute \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"type=\\\"tooltip\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 104\n        }, this), \" to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Progress>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 139\n        }, this), \" component.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this),\n      scope: {\n        Progress\n      },\n      imports: `import Progress from \"src/components/Progress\";`,\n      example: `<React.Fragment>\n  <Progress variant=\"primary\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"secondary\" label=\"Wordpress\" type=\"tooltip\" />\n  <Progress variant=\"tertiary\" label=\"Laravel\" type=\"tooltip\" />\n  <Progress variant=\"success\" label=\"Bootstrap\" type=\"tooltip\" />\n  <Progress variant=\"info\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"danger\" label=\"Javascript\" type=\"tooltip\" />\n</React.Fragment>`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Documentation, {\n      title: \"Sizing\",\n      description: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You can also use one of the four available sizes for the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Progress>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 71\n        }, this), \" updating the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"size=\\\"*\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 118\n        }, this), \" attribute.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this),\n      scope: {\n        Progress\n      },\n      imports: `import Progress from \"src/components/Progress\";`,\n      example: `<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/components/Progress.js"],"names":["React","Col","Row","Container","Documentation","Progress"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Example with tooltip labels\"\n        description={\n          <p>If you'd like the labels to be shown as tooltips, all you need to do is add the attribute <code>type=\"tooltip\"</code> to the <code>&#x3C;Progress&#x3E;</code> component.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"secondary\" label=\"Wordpress\" type=\"tooltip\" />\n  <Progress variant=\"tertiary\" label=\"Laravel\" type=\"tooltip\" />\n  <Progress variant=\"success\" label=\"Bootstrap\" type=\"tooltip\" />\n  <Progress variant=\"info\" label=\"Angular\" type=\"tooltip\" />\n  <Progress variant=\"danger\" label=\"Javascript\" type=\"tooltip\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"]},"metadata":{},"sourceType":"module"}