{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/volt-pro-react-v1.0.0/src/pages/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuestionCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { Card, Button, Breadcrumb } from '@themesberg/react-bootstrap';\nimport { Routes } from \"../routes\";\nimport { EventModal } from \"../components/Modals\";\nimport EVENTS_DATA from \"../data/events\";\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\nexport default _s(() => {\n  _s();\n\n  const defaultModalProps = {\n    id: \"\",\n    title: \"\",\n    start: null,\n    end: null\n  };\n  const history = useHistory();\n  const [events, setEvents] = useState(EVENTS_DATA);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalProps, setModalProps] = useState(defaultModalProps);\n  const calendarRef = useRef();\n  const currentDate = moment().format(\"YYYY-MM-DD\");\n\n  const onDateClick = props => {\n    const {\n      date\n    } = props;\n    const id = events.length + 1;\n    const endDate = new Date(date).setDate(date.getDate() + 1);\n    setModalProps({ ...modalProps,\n      id,\n      start: date,\n      end: endDate\n    });\n    setShowAddModal(true);\n  };\n\n  const onEventClick = props => {\n    const {\n      event: {\n        id,\n        title,\n        start,\n        end\n      }\n    } = props;\n    setModalProps({\n      id,\n      title,\n      start,\n      end\n    });\n    setShowEditModal(true);\n  };\n\n  const onEventUpdate = props => {\n    const {\n      id,\n      title,\n      start,\n      end\n    } = props;\n    const calendarApi = calendarRef.current.getApi();\n    const calendarElem = calendarApi.getEventById(id);\n\n    if (calendarElem) {\n      calendarElem.setProp(\"title\", title);\n      calendarElem.setStart(start);\n      calendarElem.setEnd(end);\n    }\n\n    setShowEditModal(false);\n  };\n\n  const onEventAdd = props => {\n    const newEvent = { ...props,\n      dragable: true,\n      className: 'bg-blue text-white',\n      allDay: true\n    };\n    setShowAddModal(false);\n    setEvents([...events, newEvent]);\n    setModalProps(defaultModalProps);\n  };\n\n  const onEventDelete = async id => {\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: 'error',\n      title: 'Confirm deletion',\n      text: 'Are you sure you want to delete this event?',\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: 'No, cancel!'\n    });\n    setShowEditModal(false);\n    setModalProps(defaultModalProps);\n\n    if (result.isConfirmed) {\n      await SwalWithBootstrapButtons.fire('Deleted!', 'The event has been deleted.', 'success');\n      const newEvents = events.filter(e => e.id !== parseInt(id));\n      setEvents(newEvents);\n    }\n  };\n\n  const handleClose = () => {\n    setShowAddModal(false);\n    setShowEditModal(false);\n  };\n\n  const goToCalendarDocs = () => {\n    history.push(Routes.PluginCalendar.path);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showEditModal ? /*#__PURE__*/_jsxDEV(EventModal, { ...modalProps,\n      edit: true,\n      show: showEditModal,\n      onUpdate: onEventUpdate,\n      onDelete: onEventDelete,\n      onHide: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : null, showAddModal ? /*#__PURE__*/_jsxDEV(EventModal, { ...modalProps,\n      show: showAddModal,\n      onAdd: onEventAdd,\n      onHide: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-xl-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-block mb-4 mb-xl-0\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          className: \"d-none d-md-inline-block\",\n          listProps: {\n            className: \"breadcrumb-dark breadcrumb-transparent\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faHome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"Volt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            active: true,\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: \"Dozens of reusable components built to provide buttons, alerts, popovers, and more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-gray\",\n          onClick: goToCalendarDocs,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faQuestionCircle,\n            className: \"me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), \" Calendar Docs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          editable: true,\n          selectable: true,\n          ref: calendarRef,\n          events: events,\n          displayEventTime: false,\n          themeSystem: \"bootstrap\",\n          plugins: [dayGridPlugin, timeGridPlugin, bootstrapPlugin, interactionPlugin],\n          initialView: \"dayGridMonth\",\n          initialDate: currentDate,\n          eventClick: onEventClick,\n          dateClick: onDateClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"4DttUgCjzhJoI8bP8dVNp9wY9RU=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"sources":["/workspace/volt-pro-react-v1.0.0/src/pages/Calendar.js"],"names":["React","useRef","useState","moment","Swal","useHistory","withReactContent","FullCalendar","dayGridPlugin","timeGridPlugin","bootstrapPlugin","interactionPlugin","FontAwesomeIcon","faHome","faQuestionCircle","Card","Button","Breadcrumb","Routes","EventModal","EVENTS_DATA","SwalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","defaultModalProps","id","title","start","end","history","events","setEvents","showEditModal","setShowEditModal","showAddModal","setShowAddModal","modalProps","setModalProps","calendarRef","currentDate","format","onDateClick","props","date","length","endDate","Date","setDate","getDate","onEventClick","event","onEventUpdate","calendarApi","current","getApi","calendarElem","getEventById","setProp","setStart","setEnd","onEventAdd","newEvent","dragable","className","allDay","onEventDelete","result","fire","icon","text","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","newEvents","filter","e","parseInt","handleClose","goToCalendarDocs","push","PluginCalendar","path"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,6BAAzC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,wBAAwB,GAAGf,gBAAgB,CAACF,IAAI,CAACkB,KAAL,CAAW;AAC3DC,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE,sBADJ;AAEXC,IAAAA,YAAY,EAAE;AAFH,GAD8C;AAK3DC,EAAAA,cAAc,EAAE;AAL2C,CAAX,CAAD,CAAjD;AAQA,kBAAe,MAAM;AAAA;;AACnB,QAAMC,iBAAiB,GAAG;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE,EAAjB;AAAqBC,IAAAA,KAAK,EAAE,IAA5B;AAAkCC,IAAAA,GAAG,EAAE;AAAvC,GAA1B;AACA,QAAMC,OAAO,GAAG3B,UAAU,EAA1B;AACA,QAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAACkB,WAAD,CAApC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoClC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmC,YAAD,EAAeC,eAAf,IAAkCpC,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACqC,UAAD,EAAaC,aAAb,IAA8BtC,QAAQ,CAACyB,iBAAD,CAA5C;AACA,QAAMc,WAAW,GAAGxC,MAAM,EAA1B;AAEA,QAAMyC,WAAW,GAAGvC,MAAM,GAAGwC,MAAT,CAAgB,YAAhB,CAApB;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,KAAjB;AACA,UAAMjB,EAAE,GAAGK,MAAM,CAACc,MAAP,GAAgB,CAA3B;AACA,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASH,IAAT,EAAeI,OAAf,CAAuBJ,IAAI,CAACK,OAAL,KAAiB,CAAxC,CAAhB;AAEAX,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBX,MAAAA,EAAjB;AAAqBE,MAAAA,KAAK,EAAEgB,IAA5B;AAAkCf,MAAAA,GAAG,EAAEiB;AAAvC,KAAD,CAAb;AACAV,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAPD;;AASA,QAAMc,YAAY,GAAIP,KAAD,IAAW;AAC9B,UAAM;AAAEQ,MAAAA,KAAK,EAAE;AAAEzB,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,KAAb;AAAoBC,QAAAA;AAApB;AAAT,QAAuCc,KAA7C;AACAL,IAAAA,aAAa,CAAC;AAAEZ,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,KAAD,CAAb;AACAK,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAJD;;AAMA,QAAMkB,aAAa,GAAIT,KAAD,IAAW;AAC/B,UAAM;AAAEjB,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QAA4Bc,KAAlC;AACA,UAAMU,WAAW,GAAGd,WAAW,CAACe,OAAZ,CAAoBC,MAApB,EAApB;AACA,UAAMC,YAAY,GAAGH,WAAW,CAACI,YAAZ,CAAyB/B,EAAzB,CAArB;;AAEA,QAAI8B,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B/B,KAA9B;AACA6B,MAAAA,YAAY,CAACG,QAAb,CAAsB/B,KAAtB;AACA4B,MAAAA,YAAY,CAACI,MAAb,CAAoB/B,GAApB;AACD;;AAEDK,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAZD;;AAcA,QAAM2B,UAAU,GAAIlB,KAAD,IAAW;AAC5B,UAAMmB,QAAQ,GAAG,EAAE,GAAGnB,KAAL;AAAYoB,MAAAA,QAAQ,EAAE,IAAtB;AAA4BC,MAAAA,SAAS,EAAE,oBAAvC;AAA6DC,MAAAA,MAAM,EAAE;AAArE,KAAjB;AAEA7B,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAJ,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY+B,QAAZ,CAAD,CAAT;AACAxB,IAAAA,aAAa,CAACb,iBAAD,CAAb;AACD,GAND;;AAQA,QAAMyC,aAAa,GAAG,MAAOxC,EAAP,IAAc;AAClC,UAAMyC,MAAM,GAAG,MAAMhD,wBAAwB,CAACiD,IAAzB,CAA8B;AACjDC,MAAAA,IAAI,EAAE,OAD2C;AAEjD1C,MAAAA,KAAK,EAAE,kBAF0C;AAGjD2C,MAAAA,IAAI,EAAE,6CAH2C;AAIjDC,MAAAA,gBAAgB,EAAE,IAJ+B;AAKjDC,MAAAA,iBAAiB,EAAE,iBAL8B;AAMjDC,MAAAA,gBAAgB,EAAE;AAN+B,KAA9B,CAArB;AASAvC,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,IAAAA,aAAa,CAACb,iBAAD,CAAb;;AAEA,QAAI0C,MAAM,CAACO,WAAX,EAAwB;AACtB,YAAMvD,wBAAwB,CAACiD,IAAzB,CAA8B,UAA9B,EAA0C,6BAA1C,EAAyE,SAAzE,CAAN;AAEA,YAAMO,SAAS,GAAG5C,MAAM,CAAC6C,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACnD,EAAF,KAASoD,QAAQ,CAACpD,EAAD,CAApC,CAAlB;AACAM,MAAAA,SAAS,CAAC2C,SAAD,CAAT;AACD;AACF,GAnBD;;AAqBA,QAAMI,WAAW,GAAG,MAAM;AACxB3C,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHD;;AAKA,QAAM8C,gBAAgB,GAAG,MAAM;AAC7BlD,IAAAA,OAAO,CAACmD,IAAR,CAAajE,MAAM,CAACkE,cAAP,CAAsBC,IAAnC;AACD,GAFD;;AAIA,sBACE;AAAA,eACGlD,aAAa,gBACZ,QAAC,UAAD,OACMI,UADN;AAEE,MAAA,IAAI,EAAE,IAFR;AAGE,MAAA,IAAI,EAAEJ,aAHR;AAIE,MAAA,QAAQ,EAAEmB,aAJZ;AAKE,MAAA,QAAQ,EAAEc,aALZ;AAME,MAAA,MAAM,EAAEa;AANV;AAAA;AAAA;AAAA;AAAA,YADY,GASV,IAVN,EAYG5C,YAAY,gBACX,QAAC,UAAD,OACME,UADN;AAEE,MAAA,IAAI,EAAEF,YAFR;AAGE,MAAA,KAAK,EAAE0B,UAHT;AAIE,MAAA,MAAM,EAAEkB;AAJV;AAAA;AAAA;AAAA;AAAA,YADW,GAOT,IAnBN,eAqBE;AAAK,MAAA,SAAS,EAAC,oFAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,0BAAtB;AAAiD,UAAA,SAAS,EAAE;AAAEf,YAAAA,SAAS,EAAE;AAAb,WAA5D;AAAA,kCACE,QAAC,UAAD,CAAY,IAAZ;AAAA,mCAAiB,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAErD;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,MAAM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,cAAhB;AAA+B,UAAA,OAAO,EAAEqE,gBAAxC;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEpE,gBAAvB;AAAyC,YAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAwCE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,UAAU,MAFZ;AAGE,UAAA,GAAG,EAAE2B,WAHP;AAIE,UAAA,MAAM,EAAER,MAJV;AAKE,UAAA,gBAAgB,EAAE,KALpB;AAME,UAAA,WAAW,EAAC,WANd;AAOE,UAAA,OAAO,EAAE,CAACzB,aAAD,EAAgBC,cAAhB,EAAgCC,eAAhC,EAAiDC,iBAAjD,CAPX;AAQE,UAAA,WAAW,EAAC,cARd;AASE,UAAA,WAAW,EAAE+B,WATf;AAUE,UAAA,UAAU,EAAEU,YAVd;AAWE,UAAA,SAAS,EAAER;AAXb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA,kBADF;AA4DD,CA1ID;AAAA,UAEkBvC,UAFlB;AAAA","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuestionCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { Card, Button, Breadcrumb } from '@themesberg/react-bootstrap';\n\nimport { Routes } from \"../routes\";\nimport { EventModal } from \"../components/Modals\";\nimport EVENTS_DATA from \"../data/events\";\n\nconst SwalWithBootstrapButtons = withReactContent(Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary me-3',\n    cancelButton: 'btn btn-gray'\n  },\n  buttonsStyling: false\n}));\n\nexport default () => {\n  const defaultModalProps = { id: \"\", title: \"\", start: null, end: null };\n  const history = useHistory();\n  const [events, setEvents] = useState(EVENTS_DATA);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalProps, setModalProps] = useState(defaultModalProps);\n  const calendarRef = useRef();\n\n  const currentDate = moment().format(\"YYYY-MM-DD\");\n\n  const onDateClick = (props) => {\n    const { date } = props;\n    const id = events.length + 1;\n    const endDate = new Date(date).setDate(date.getDate() + 1);\n\n    setModalProps({ ...modalProps, id, start: date, end: endDate });\n    setShowAddModal(true);\n  };\n\n  const onEventClick = (props) => {\n    const { event: { id, title, start, end } } = props;\n    setModalProps({ id, title, start, end });\n    setShowEditModal(true);\n  };\n\n  const onEventUpdate = (props) => {\n    const { id, title, start, end } = props;\n    const calendarApi = calendarRef.current.getApi();\n    const calendarElem = calendarApi.getEventById(id);\n\n    if (calendarElem) {\n      calendarElem.setProp(\"title\", title);\n      calendarElem.setStart(start);\n      calendarElem.setEnd(end);\n    }\n\n    setShowEditModal(false);\n  };\n\n  const onEventAdd = (props) => {\n    const newEvent = { ...props, dragable: true, className: 'bg-blue text-white', allDay: true };\n\n    setShowAddModal(false);\n    setEvents([...events, newEvent]);\n    setModalProps(defaultModalProps);\n  };\n\n  const onEventDelete = async (id) => {\n    const result = await SwalWithBootstrapButtons.fire({\n      icon: 'error',\n      title: 'Confirm deletion',\n      text: 'Are you sure you want to delete this event?',\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: 'No, cancel!'\n    });\n\n    setShowEditModal(false);\n    setModalProps(defaultModalProps);\n\n    if (result.isConfirmed) {\n      await SwalWithBootstrapButtons.fire('Deleted!', 'The event has been deleted.', 'success');\n\n      const newEvents = events.filter(e => e.id !== parseInt(id));\n      setEvents(newEvents);\n    }\n  };\n\n  const handleClose = () => {\n    setShowAddModal(false);\n    setShowEditModal(false);\n  };\n\n  const goToCalendarDocs = () => {\n    history.push(Routes.PluginCalendar.path);\n  };\n\n  return (\n    <>\n      {showEditModal ? (\n        <EventModal\n          {...modalProps}\n          edit={true}\n          show={showEditModal}\n          onUpdate={onEventUpdate}\n          onDelete={onEventDelete}\n          onHide={handleClose}\n        />\n      ) : null}\n\n      {showAddModal ? (\n        <EventModal\n          {...modalProps}\n          show={showAddModal}\n          onAdd={onEventAdd}\n          onHide={handleClose}\n        />\n      ) : null}\n\n      <div className=\"d-xl-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n        <div className=\"d-block mb-4 mb-xl-0\">\n          <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\n            <Breadcrumb.Item><FontAwesomeIcon icon={faHome} /></Breadcrumb.Item>\n            <Breadcrumb.Item>Volt</Breadcrumb.Item>\n            <Breadcrumb.Item active>Calendar</Breadcrumb.Item>\n          </Breadcrumb>\n          <h4>Calendar</h4>\n          <p className=\"mb-0\">\n            Dozens of reusable components built to provide buttons, alerts, popovers, and more.\n          </p>\n        </div>\n        <div>\n          <Button variant=\"outline-gray\" onClick={goToCalendarDocs}>\n            <FontAwesomeIcon icon={faQuestionCircle} className=\"me-1\" /> Calendar Docs\n          </Button>\n        </div>\n      </div>\n\n      <Card>\n        <Card.Body>\n          <FullCalendar\n            editable\n            selectable\n            ref={calendarRef}\n            events={events}\n            displayEventTime={false}\n            themeSystem=\"bootstrap\"\n            plugins={[dayGridPlugin, timeGridPlugin, bootstrapPlugin, interactionPlugin]}\n            initialView=\"dayGridMonth\"\n            initialDate={currentDate}\n            eventClick={onEventClick}\n            dateClick={onDateClick}\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}